<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lanhoo&#39;s blog</title>
  
  <subtitle>subtitle8</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://glanhoo.coding.me/"/>
  <updated>2019-11-26T07:54:59.994Z</updated>
  <id>https://glanhoo.coding.me/</id>
  
  <author>
    <name>Lanhoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用python写了一个解数字华容道游戏的程序</title>
    <link href="https://glanhoo.coding.me/2019/11/10/%E7%94%A8python%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E8%A7%A3%E6%95%B0%E5%AD%97%E5%8D%8E%E5%AE%B9%E9%81%93%E6%B8%B8%E6%88%8F%E7%9A%84%E7%A8%8B%E5%BA%8F/"/>
    <id>https://glanhoo.coding.me/2019/11/10/%E7%94%A8python%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E8%A7%A3%E6%95%B0%E5%AD%97%E5%8D%8E%E5%AE%B9%E9%81%93%E6%B8%B8%E6%88%8F%E7%9A%84%E7%A8%8B%E5%BA%8F/</id>
    <published>2019-11-10T11:48:06.000Z</published>
    <updated>2019-11-26T07:54:59.994Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>华容道游戏，可以有数字型，也可以有图像型。这里介绍的是数字华容道，也叫数字推盘。市面上一般有3X3、4X4、5X5、6X6等，其中4X4数字华容道常作为《最强大脑》第一轮节目来选拔选手。</p><p>网络上有很多与之相关的编程话题，但很多都只是把数字打乱，并调整为有解的玩法。而我想要做的是怎样<strong>从一个有解的数字推盘一步一步地还原并且是最少的步数。</strong></p><p>下面这张图就是程序完成后的结果</p></blockquote><p><img src="/images/blog/3X3%E8%BF%98%E5%8E%9F%E5%8D%8E%E5%AE%B9%E9%81%93_hard.gif" alt="3X3还原华容道_hard"></p><a id="more"></a><h3 id="1-创建了一个Position类"><a href="#1-创建了一个Position类" class="headerlink" title="1. 创建了一个Position类"></a>1. 创建了一个Position类</h3><blockquote><p>以3X3为例，那右下角的位置就是<code>p = Positon(2, 2)</code>，它们之前可以相加，判断是否相等，以及作为字典的key。</p></blockquote><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Position</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(self, a, b)</span>:</span></span><br><span class="line">        self.a = a</span><br><span class="line">        self.b = b</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__add__</span><span class="hljs-params">(self, other)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">return</span> Position(self.a + other.a, self.b + other.b)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__repr__</span><span class="hljs-params">(self)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"(%d, %d)"</span> % (self.a, self.b)</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__eq__</span><span class="hljs-params">(self, other)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">if</span> self.a == other.a <span class="hljs-keyword">and</span> self.b == other.b:</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span></span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 若写了__eq__而不写__hash__方法，用作字典的key时会报错：unhashable type: 'Position'</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__hash__</span><span class="hljs-params">(self)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">return</span> hash((self.a, self.b))</span><br><span class="line">    </span><br><span class="line"><span class="hljs-meta">    @property</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">row</span><span class="hljs-params">(self)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">return</span> self.a</span><br><span class="line">    </span><br><span class="line"><span class="hljs-meta">    @property</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">column</span><span class="hljs-params">(self)</span>:</span></span><br><span class="line">        <span class="hljs-keyword">return</span> self.b</span><br></pre></td></tr></table></figure><h3 id="2-创建了一个枚举类，模拟Position类上下左右的情况"><a href="#2-创建了一个枚举类，模拟Position类上下左右的情况" class="headerlink" title="2. 创建了一个枚举类，模拟Position类上下左右的情况"></a>2. 创建了一个枚举类，模拟Position类上下左右的情况</h3><blockquote><p>以3X3为例，右下角<code>p = Positon(2, 2)</code>向左移就得到<code>p + LEFT</code> –&gt; <code>Position(2, 1)</code></p></blockquote><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> enum <span class="hljs-keyword">import</span> Enum</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Move</span><span class="hljs-params">(Enum)</span>:</span></span><br><span class="line">    LEFT = Position(<span class="hljs-number">0</span>, <span class="hljs-number">-1</span>)</span><br><span class="line">    RIGHT = Position(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)</span><br><span class="line">    UP = Position(<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>)</span><br><span class="line">    DOWN = Position(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LEFT = Move.LEFT.value</span><br><span class="line">RIGHT = Move.RIGHT.value</span><br><span class="line">UP = Move.UP.value</span><br><span class="line">DOWN = Move.DOWN.value</span><br><span class="line">CHOICES = [LEFT, UP, RIGHT, DOWN]</span><br></pre></td></tr></table></figure><h3 id="3-最基本的两个类写完，下面代码就不列举了，说下主要的思路"><a href="#3-最基本的两个类写完，下面代码就不列举了，说下主要的思路" class="headerlink" title="3. 最基本的两个类写完，下面代码就不列举了，说下主要的思路"></a>3. 最基本的两个类写完，下面代码就不列举了，说下主要的思路</h3><blockquote><p>我的求解是逆推方式</p><p>下面的以3X3的数字推盘为例</p></blockquote><ul><li><p><code>0</code>代表数字推盘里的空位</p></li><li><p>最初始的状态，也就是还原后的答案为<code>123456780</code></p></li></ul><img src="/images/blog/3x3_0.jpg" alt="3x3_0" style="zoom:50%;"><ul><li><p>它走一步可以有向左<code>123456708</code>和向上<code>123450786</code>两种情况：</p><ul><li>向左，记录一下<code>123456708</code>：<code>l</code></li></ul><img src="/images/blog/3x3_1_l.jpg" alt="3x3_1_l" style="zoom:50%;"><ul><li>向上，记录一下<code>123450786</code>: <code>u</code></li></ul></li></ul><img src="/images/blog/3x3_1_u.jpg" alt="3x3_1_u" style="zoom:50%;"><ul><li><p>走两步的情况：</p><ul><li><code>123456708</code>可以向左，向上，记录下4种情况<ul><li><code>...: ll</code></li><li><code>...: lu</code></li></ul></li><li><code>123450786</code>可以向左，向上<ul><li><code>...: ul</code></li><li><code>...: uu</code></li></ul></li></ul></li><li><p>以此类推，把所有的可能性走完，就把3x3的解法全部记录完成</p></li></ul><h3 id="4-遇到的问题"><a href="#4-遇到的问题" class="headerlink" title="4. 遇到的问题"></a>4. 遇到的问题</h3><ol><li><p>3×3所有的可能情况有<code>9X8X7X6X5X4X3</code>即181440种情况，包括了最初状态，没有乘以2是因为有一半是无解的，无法还原。我用<code>mysql</code>来记录，18万条数据用了<code>36M</code>。</p><p>4x4所有的可能情况有<code>16!/2</code>有大约<code>10万亿</code>条数据，存储所有的4x4大约需要2000TB，个人电脑明显存储不了，所有4x4只存了174万条。</p></li><li><p>像4x4这么多的情况，计算到后面步数越多，计算量巨大，同时写入数据库也巨慢。</p></li></ol><h3 id="5-展示其他的数字华容道"><a href="#5-展示其他的数字华容道" class="headerlink" title="5. 展示其他的数字华容道"></a>5. 展示其他的数字华容道</h3><p><img src="/images/blog/1X10%E8%BF%98%E5%8E%9F%E5%8D%8E%E5%AE%B9%E9%81%93_hard.gif" alt="1X10还原华容道_hard"></p><hr><p><img src="/images/blog/3X2%E8%BF%98%E5%8E%9F%E5%8D%8E%E5%AE%B9%E9%81%93_hard.gif" alt="3X2还原华容道_hard"></p><hr><p><img src="/images/blog/4X4%E8%BF%98%E5%8E%9F%E5%8D%8E%E5%AE%B9%E9%81%93_hard.gif" alt="4X4还原华容道_hard"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;华容道游戏，可以有数字型，也可以有图像型。这里介绍的是数字华容道，也叫数字推盘。市面上一般有3X3、4X4、5X5、6X6等，其中4X4数字华容道常作为《最强大脑》第一轮节目来选拔选手。&lt;/p&gt;
&lt;p&gt;网络上有很多与之相关的编程话题，但很多都只是把数字打乱，并调整为有解的玩法。而我想要做的是怎样&lt;strong&gt;从一个有解的数字推盘一步一步地还原并且是最少的步数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面这张图就是程序完成后的结果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/blog/3X3%E8%BF%98%E5%8E%9F%E5%8D%8E%E5%AE%B9%E9%81%93_hard.gif&quot; alt=&quot;3X3还原华容道_hard&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="python" scheme="https://glanhoo.coding.me/tags/python/"/>
    
      <category term="华容道" scheme="https://glanhoo.coding.me/tags/%E5%8D%8E%E5%AE%B9%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>分享一个按照模板文件格式自动汇总统计的脚本</title>
    <link href="https://glanhoo.coding.me/2019/11/08/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E6%8C%89%E7%85%A7%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%87%AA%E5%8A%A8%E6%B1%87%E6%80%BB%E7%BB%9F%E8%AE%A1%E7%9A%84%E8%84%9A%E6%9C%AC/"/>
    <id>https://glanhoo.coding.me/2019/11/08/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E6%8C%89%E7%85%A7%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%87%AA%E5%8A%A8%E6%B1%87%E6%80%BB%E7%BB%9F%E8%AE%A1%E7%9A%84%E8%84%9A%E6%9C%AC/</id>
    <published>2019-11-08T01:12:36.000Z</published>
    <updated>2019-11-26T07:55:07.284Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前不久旧同事联系上我，说周报表更新了模板，看能不能改下之前写的程序，以便适应新的模板。我看了下，其实就多了新车当月起保保费，改动不是很多，就当天改好生成EXE文件发给了她。后面反馈使用没问题。</p></blockquote><h2 id="从系统里导出的表格如下："><a href="#从系统里导出的表格如下：" class="headerlink" title="从系统里导出的表格如下："></a>从系统里导出的表格如下：</h2><a id="more"></a><p><img src="/images/blog/image-145643683.png" alt="image-145643683"></p><h2 id="要求的新的模板文件如下图："><a href="#要求的新的模板文件如下图：" class="headerlink" title="要求的新的模板文件如下图："></a>要求的新的模板文件如下图：</h2><p><img src="/images/blog/image-150251030.png" alt="image-150251030"></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd</span><br><span class="line"><span class="hljs-keyword">from</span> numpy <span class="hljs-keyword">import</span> nan, where</span><br><span class="line"><span class="hljs-keyword">import</span> datetime</span><br><span class="line"><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> walk, path, mkdir</span><br><span class="line"><span class="hljs-keyword">import</span> xlwt</span><br><span class="line"><span class="hljs-keyword">import</span> xlrd</span><br><span class="line"><span class="hljs-keyword">from</span> xlutils.filter <span class="hljs-keyword">import</span> process, XLRDReader, XLWTWriter</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 复制样式</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">copy2</span><span class="hljs-params">(wb)</span>:</span></span><br><span class="line">    w = XLWTWriter()</span><br><span class="line">    process(XLRDReader(wb, <span class="hljs-string">'unknown.xls'</span>), w)</span><br><span class="line">    <span class="hljs-keyword">return</span> w.output[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>], w.style_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 空格转nan</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">space2nan</span><span class="hljs-params">(df, *col)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> col:</span><br><span class="line">        df[i] = df[i].str.strip()</span><br><span class="line">        df[i] = where(df[i], df[i], nan)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_df</span><span class="hljs-params">(xls_name)</span>:</span></span><br><span class="line">  <span class="hljs-comment"># 导出的表格表头在第6行，即header=5</span></span><br><span class="line">    data = pd.read_excel(xls_name, header=<span class="hljs-number">5</span>)</span><br><span class="line">    <span class="hljs-comment"># errorse有三个选项，当出现错误时，为nan用'coerce'</span></span><br><span class="line">    <span class="hljs-comment"># errors : &#123;‘ignore’, ‘raise’, ‘coerce’&#125;, default ‘raise’</span></span><br><span class="line">    <span class="hljs-comment"># If ‘raise’, then invalid parsing will raise an exception</span></span><br><span class="line">    <span class="hljs-comment"># If ‘coerce’, then invalid parsing will be set as NaT</span></span><br><span class="line">    <span class="hljs-comment"># If ‘ignore’, then invalid parsing will return the input</span></span><br><span class="line">    data[<span class="hljs-string">"起保日期"</span>] = pd.to_datetime(data[<span class="hljs-string">"起保日期"</span>], errors=<span class="hljs-string">'coerce'</span>)</span><br><span class="line">    <span class="hljs-comment"># 要对"起保日期“列的数据进行删除，如删除”小计", " "的行数据</span></span><br><span class="line">    data.dropna(how=<span class="hljs-string">"any"</span>, subset=[<span class="hljs-string">"起保日期"</span>], inplace=<span class="hljs-literal">True</span>)</span><br><span class="line"><span class="hljs-comment"># 导出来的数据里看似为空，其实里面是用空格" "的，要用下面的函数把它们转为nan</span></span><br><span class="line">    space2nan(data, <span class="hljs-string">"车辆大类"</span>, <span class="hljs-string">"使用性质"</span>, <span class="hljs-string">"新车标识"</span>)</span><br><span class="line"><span class="hljs-comment"># 对空值前行按照前面的值填充</span></span><br><span class="line">    data.fillna(method=<span class="hljs-string">"ffill"</span>, inplace=<span class="hljs-literal">True</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 对当年/去年起保日期数据进行筛选</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data</span><span class="hljs-params">(df, is_last_year=False)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> is_last_year:</span><br><span class="line">        year_num = last_year</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        year_num = year</span><br><span class="line">    <span class="hljs-keyword">if</span> month_day:</span><br><span class="line">        year_data = df[(df[<span class="hljs-string">"起保日期"</span>] &lt;= datetime.datetime(year_num, int(month_day[:<span class="hljs-number">2</span>]), int(month_day[<span class="hljs-number">2</span>:]))) &amp;</span><br><span class="line">                       (df[<span class="hljs-string">"起保日期"</span>] &gt;= datetime.datetime(year_num, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))]</span><br><span class="line">        month_data = year_data[year_data[<span class="hljs-string">"起保日期"</span>] &gt;= datetime.datetime(year_num, int(month_day[:<span class="hljs-number">2</span>]), <span class="hljs-number">1</span>)]</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        year_data = df[(df[<span class="hljs-string">"起保日期"</span>] &lt; datetime.datetime(year_num, today.month, today.day)) &amp;</span><br><span class="line">                       (df[<span class="hljs-string">"起保日期"</span>] &gt;= datetime.datetime(year_num, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))]</span><br><span class="line">        month_data = year_data[year_data[<span class="hljs-string">"起保日期"</span>] &gt;= datetime.datetime(year_num, month, <span class="hljs-number">1</span>)]  <span class="hljs-comment"># 这里的月数要注意</span></span><br><span class="line">    <span class="hljs-keyword">return</span> year_data, month_data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 只保留两位小数，舍弃其他，不进位</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_decimal</span><span class="hljs-params">(flo)</span>:</span></span><br><span class="line">    str_float = str(flo / <span class="hljs-number">10000</span>)</span><br><span class="line">    wan, xiao = str_float.split(<span class="hljs-string">"."</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> float(<span class="hljs-string">"."</span>.join([wan, xiao[:<span class="hljs-number">2</span>]]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_money</span><span class="hljs-params">(df)</span>:</span></span><br><span class="line">    total = df[<span class="hljs-string">"保费（元）"</span>].sum()</span><br><span class="line">    car = df[df[<span class="hljs-string">"使用性质"</span>] == <span class="hljs-string">"家庭自用"</span>][<span class="hljs-string">"保费（元）"</span>].sum()</span><br><span class="line">    motor = df[df[<span class="hljs-string">"车辆大类"</span>] == <span class="hljs-string">"摩托车"</span>][<span class="hljs-string">"保费（元）"</span>].sum()</span><br><span class="line">    <span class="hljs-keyword">return</span> get_decimal(total), get_decimal(car), get_decimal(motor)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">write2</span><span class="hljs-params">(x, y, value)</span>:</span></span><br><span class="line">    styles = s[rbs.cell_xf_index(x, y)]</span><br><span class="line">    wbs.write(x, y, value, styles)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 写入模板文件</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrtie2template</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    <span class="hljs-comment"># 全车险</span></span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">2</span>, last_m_all)</span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, this_m_all)</span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, (this_m_all - last_m_all) / last_m_all)</span><br><span class="line"></span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, last_y_all)</span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, this_y_all)</span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">7</span>, (this_y_all - last_y_all) / last_y_all)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 家用车</span></span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">2</span>, last_m_car)</span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">3</span>, this_m_car)</span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">4</span>, (this_m_car - last_m_car) / last_m_car)</span><br><span class="line"></span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">5</span>, last_y_car)</span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">6</span>, this_y_car)</span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, (this_y_car - last_y_car) / last_y_car)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 摩托车</span></span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">2</span>, last_m_motor)</span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">3</span>, this_m_motor)</span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">4</span>, (this_m_motor - last_m_motor) / last_m_motor)</span><br><span class="line"></span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">5</span>, last_y_motor)</span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">6</span>, this_y_motor)</span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">7</span>, (this_y_motor - last_y_motor) / last_y_motor)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 新车</span></span><br><span class="line">    <span class="hljs-comment"># 第一行</span></span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">8</span>, last_m_new_all)</span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">9</span>, this_m_new_all)</span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">10</span>, (this_m_new_all - last_m_new_all) / last_m_new_all)</span><br><span class="line">    <span class="hljs-comment"># 第二行</span></span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">8</span>, last_m_new_car)</span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, this_m_new_car)</span><br><span class="line">    write2(<span class="hljs-number">6</span>, <span class="hljs-number">10</span>, (this_m_new_car - last_m_new_car) / last_m_new_car)</span><br><span class="line">    <span class="hljs-comment"># 第三行</span></span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">8</span>,  last_m_new_motor)</span><br><span class="line">    write2(<span class="hljs-number">7</span>, <span class="hljs-number">9</span>,  this_m_new_motor)</span><br><span class="line">    <span class="hljs-keyword">if</span> last_m_new_motor == <span class="hljs-number">0</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> this_m_new_motor == <span class="hljs-number">0</span>:</span><br><span class="line">            write2(<span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            write2(<span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        write2(<span class="hljs-number">7</span>, <span class="hljs-number">10</span>,  (this_m_new_motor - last_m_new_motor) / last_m_new_motor)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 添加日期</span></span><br><span class="line">    write2(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"报送日期："</span> + today_date)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 填写单位</span></span><br><span class="line">    write2(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-string">"XXXXXX公司"</span>)</span><br><span class="line">    rb.release_resources()  <span class="hljs-comment"># 关闭模板文件</span></span><br><span class="line">    wb.save(file_name)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span><span class="hljs-params">()</span>:</span></span><br><span class="line">  <span class="hljs-comment"># 与模板相关的代码如下</span></span><br><span class="line">    rb = <span class="hljs-literal">None</span></span><br><span class="line">    <span class="hljs-comment"># 查找模板文件</span></span><br><span class="line">    model_file = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> root, dirs, files <span class="hljs-keyword">in</span> walk(<span class="hljs-string">"./模板文件"</span>):</span><br><span class="line">        <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> files:</span><br><span class="line">            <span class="hljs-keyword">if</span> name.endswith(<span class="hljs-string">".xls"</span>) <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> name.startswith(<span class="hljs-string">"."</span>):</span><br><span class="line">                model_file = path.join(root, name)</span><br><span class="line">                rb = xlrd.open_workbook(model_file, formatting_info=<span class="hljs-literal">True</span>, on_demand=<span class="hljs-literal">True</span>)</span><br><span class="line">                <span class="hljs-keyword">break</span></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                input(<span class="hljs-string">"在【模板文件】里没有找到模板文件，请关闭软件，并在模板文件夹内放置模板文件"</span>)</span><br><span class="line">                exit()</span><br><span class="line"></span><br><span class="line">    wb, s = copy2(rb)</span><br><span class="line">    wbs = wb.get_sheet(<span class="hljs-number">0</span>)</span><br><span class="line">    rbs = rb.get_sheet(<span class="hljs-number">0</span>)</span><br><span class="line"></span><br><span class="line">    today = datetime.datetime.now()</span><br><span class="line">    year = today.year</span><br><span class="line">    <span class="hljs-comment"># 如果今天刚好是这个月的第一天，月的数字就得减一</span></span><br><span class="line">    <span class="hljs-keyword">if</span> today.day == <span class="hljs-number">1</span>:</span><br><span class="line">        month = today.month - <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        month = today.month</span><br><span class="line">    last_year = year - <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line">    month_day = input(<span class="hljs-string">"请输入要统计数据的截止日期(包含该日)，写上月日，4位数即可，如【0513】。默认是截止昨天，【回车】即可："</span>).strip()</span><br><span class="line"></span><br><span class="line">    xls_last_year = <span class="hljs-string">""</span>  <span class="hljs-comment"># 保存去年销售数据的xls文件的路径</span></span><br><span class="line">    xls_this_year = <span class="hljs-string">""</span>  <span class="hljs-comment"># 保存今年销售数据的xls文件的路径</span></span><br><span class="line">    <span class="hljs-keyword">for</span> root, dirs, files <span class="hljs-keyword">in</span> walk(<span class="hljs-string">"."</span>):</span><br><span class="line">        <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> files:</span><br><span class="line">            <span class="hljs-keyword">if</span> name.endswith(<span class="hljs-string">".xls"</span>) <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> name.startswith(<span class="hljs-string">"."</span>):</span><br><span class="line">                <span class="hljs-keyword">if</span> name.startswith(str(last_year)):</span><br><span class="line">                    xls_last_year = path.join(root, name)</span><br><span class="line">                <span class="hljs-keyword">else</span>:</span><br><span class="line">                    temp = path.join(root, name)</span><br><span class="line">                    <span class="hljs-keyword">if</span> temp != model_file:</span><br><span class="line">                        xls_this_year = temp</span><br><span class="line"></span><br><span class="line">    print(<span class="hljs-string">"去年数据文件："</span>, xls_last_year, <span class="hljs-string">"\t今年数据文件："</span>, xls_this_year)</span><br><span class="line">    last_year_df = get_df(xls_last_year)</span><br><span class="line">    this_year_df = get_df(xls_this_year)</span><br><span class="line"></span><br><span class="line">    last_year_data, last_month_data = get_data(last_year_df, is_last_year=<span class="hljs-literal">True</span>)</span><br><span class="line">    this_year_data, this_month_data = get_data(this_year_df)</span><br><span class="line">    <span class="hljs-comment"># 在当月数据中寻找新车</span></span><br><span class="line">    last_month_new_data = last_month_data[last_month_data[<span class="hljs-string">"新车标识"</span>] == <span class="hljs-string">"是"</span>]</span><br><span class="line">    this_month_new_data = this_month_data[this_month_data[<span class="hljs-string">"新车标识"</span>] == <span class="hljs-string">"是"</span>]</span><br><span class="line"></span><br><span class="line">    last_m_all, last_m_car, last_m_motor = get_money(last_month_data)</span><br><span class="line">    last_y_all, last_y_car, last_y_motor = get_money(last_year_data)</span><br><span class="line">    this_m_all, this_m_car, this_m_motor = get_money(this_month_data)</span><br><span class="line">    this_y_all, this_y_car, this_y_motor = get_money(this_year_data)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 新增了当月累计新车保费统计</span></span><br><span class="line">    last_m_new_all, last_m_new_car, last_m_new_motor = get_money(last_month_new_data)</span><br><span class="line">    this_m_new_all, this_m_new_car, this_m_new_motor = get_money(this_month_new_data)</span><br><span class="line"></span><br><span class="line">    today_date = str(datetime.date.today())</span><br><span class="line">    <span class="hljs-comment"># 写入模版文件</span></span><br><span class="line">    file_name = <span class="hljs-string">"XXXXX车险起保保费周报表_"</span> + today_date + <span class="hljs-string">".xls"</span></span><br><span class="line">    wrtie2template()</span><br><span class="line">    input(<span class="hljs-string">"已经成功生成《%s》文件。请剪切到其他文件夹保存。\n按【回车】退出本程序，感谢您的使用。"</span> % file_name)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="在32位的win7或win10里把py文件生成exe文件"><a href="#在32位的win7或win10里把py文件生成exe文件" class="headerlink" title="在32位的win7或win10里把py文件生成exe文件"></a>在32位的win7或win10里把py文件生成exe文件</h2><blockquote><p>之前用64位的生成，测试运行也没问题，结果放在公司电脑上，出现64位的程序不能运行的问题，只好下个32位的win7来操作才把这个问题解决了。</p></blockquote><ul><li>在win7里要把<code>python3</code>安装好，并安装上面的py文件所用到的库。</li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pandas</span><br><span class="line">numpy</span><br><span class="line">xlwt</span><br><span class="line">xlrd</span><br><span class="line">xlutils</span><br></pre></td></tr></table></figure><ul><li>确保在终端里能够正常运行脚本文件之后，安装<code>pyinstaller</code></li></ul><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><ul><li>使用下面命令打包生成可执行文件–exe文件</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F monday.py</span><br><span class="line"></span><br><span class="line">C:\lanhoo\mondayV3&gt;pyinstaller -F monday.py</span><br><span class="line">46 INFO: PyInstaller: 3.4</span><br><span class="line">46 INFO: Python: 3.7.3</span><br><span class="line">46 INFO: Platform: Windows-7-6.1.7601-SP1</span><br><span class="line">46 INFO: wrote C:\lanhoo\mondayV3\monday.spec</span><br><span class="line">46 INFO: UPX is not available.</span><br><span class="line">46 INFO: Extending PYTHONPATH with paths</span><br><span class="line">...</span><br><span class="line">31855 INFO: Appending archive to EXE C:\lanhoo\mondayV3\dist\monday.exe</span><br><span class="line">31886 INFO: Building EXE from EXE-00.toc completed successfully.</span><br></pre></td></tr></table></figure><ul><li>在当前目录里就会生成几个目录，其中<code>dist</code>目录里就有生成的exe文件了，这样就可以把它发给别人在微软的系统里使用了。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前不久旧同事联系上我，说周报表更新了模板，看能不能改下之前写的程序，以便适应新的模板。我看了下，其实就多了新车当月起保保费，改动不是很多，就当天改好生成EXE文件发给了她。后面反馈使用没问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;从系统里导出的表格如下：&quot;&gt;&lt;a href=&quot;#从系统里导出的表格如下：&quot; class=&quot;headerlink&quot; title=&quot;从系统里导出的表格如下：&quot;&gt;&lt;/a&gt;从系统里导出的表格如下：&lt;/h2&gt;
    
    </summary>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="pandas" scheme="https://glanhoo.coding.me/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>Mysql开启慢日志</title>
    <link href="https://glanhoo.coding.me/2019/10/16/Mysql%E5%BC%80%E5%90%AF%E6%85%A2%E6%97%A5%E5%BF%97/"/>
    <id>https://glanhoo.coding.me/2019/10/16/Mysql%E5%BC%80%E5%90%AF%E6%85%A2%E6%97%A5%E5%BF%97/</id>
    <published>2019-10-16T01:21:17.000Z</published>
    <updated>2019-11-24T00:54:18.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看mysql物理文件存放地方"><a href="#查看mysql物理文件存放地方" class="headerlink" title="查看mysql物理文件存放地方"></a>查看mysql物理文件存放地方</h2><figure class="highlight sql hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> <span class="hljs-keyword">variables</span> <span class="hljs-keyword">like</span> <span class="hljs-string">"%datadir%"</span>;</span><br><span class="line"></span><br><span class="line">+<span class="hljs-comment">---------------+-----------------+</span></span><br><span class="line">| Variable_name | Value           |</span><br><span class="line">+<span class="hljs-comment">---------------+-----------------+</span></span><br><span class="line">| datadir       | /var/lib/mysql/ |</span><br><span class="line">+<span class="hljs-comment">---------------+-----------------+</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="以root进入该目录，建立data-slow-log-并更改所有者，所有组"><a href="#以root进入该目录，建立data-slow-log-并更改所有者，所有组" class="headerlink" title="以root进入该目录，建立data/slow.log,并更改所有者，所有组"></a>以root进入该目录，建立data/slow.log,并更改所有者，所有组</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">cd /var/lib/mysql/</span><br><span class="line">mkdir data</span><br><span class="line">cd data</span><br><span class="line">touch slow.log</span><br><span class="line">cd ..</span><br><span class="line">chown -R mysql:mysql data/</span><br></pre></td></tr></table></figure><h2 id="在mysql里设置"><a href="#在mysql里设置" class="headerlink" title="在mysql里设置"></a>在mysql里设置</h2><ul><li><code>set global slow_query_log=&#39;ON&#39;;</code> </li><li><code>set global slow_query_log_file=&quot;/var/lib/mysql/data/slow.log&quot;;</code> </li><li><code>set global long_query_time=1;</code> </li></ul><figure class="highlight sql hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mygame]&gt; set global slow_query_log='ON';</span><br><span class="line">Query OK, 0 rows affected (0.011 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mygame]&gt; set global slow_query_log_file="/var/lib/mysql/data/slow.log";</span><br><span class="line">Query OK, 0 rows affected (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mygame]&gt; set global long_query_time=1;</span><br><span class="line">Query OK, 0 rows affected (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="重启mysql服务"><a href="#重启mysql服务" class="headerlink" title="重启mysql服务"></a>重启mysql服务</h2><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mysqld</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ol><li>执行一条慢查询SQL语句</li></ol><figure class="highlight sql hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">select</span> <span class="hljs-keyword">sleep</span>(<span class="hljs-number">2</span>);</span><br></pre></td></tr></table></figure><ol><li>查看是否生成慢查询日志</li></ol><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail /var/lib/mysql/data/slow.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;查看mysql物理文件存放地方&quot;&gt;&lt;a href=&quot;#查看mysql物理文件存放地方&quot; class=&quot;headerlink&quot; title=&quot;查看mysql物理文件存放地方&quot;&gt;&lt;/a&gt;查看mysql物理文件存放地方&lt;/h2&gt;&lt;figure class=&quot;highlight sql hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;variables&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;%datadir%&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;hljs-comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Variable_name | Value           |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;hljs-comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| datadir       | /var/lib/mysql/ |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;hljs-comment&quot;&gt;---------------+-----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="mysql" scheme="https://glanhoo.coding.me/tags/mysql/"/>
    
      <category term="SQL" scheme="https://glanhoo.coding.me/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>mariadb的安装</title>
    <link href="https://glanhoo.coding.me/2019/10/05/mariadb%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://glanhoo.coding.me/2019/10/05/mariadb%E7%9A%84%E5%AE%89%E8%A3%85/</id>
    <published>2019-10-05T13:27:32.000Z</published>
    <updated>2019-11-23T08:38:59.017Z</updated>
    
    <content type="html"><![CDATA[<p>安装 <a href="https://www.archlinux.org/packages/?name=mariadb" target="_blank" rel="noopener">mariadb</a> 软件包之后，你必须在启动 <code>mariadb.service</code> <strong>之前</strong>运行下面这条命令：</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kate /etc/mysql/my.cnf.d/server.cnf</span><br></pre></td></tr></table></figure><p>添加这两行</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure><p>运行命令</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root mysql</span><br></pre></td></tr></table></figure><p>进入mysql</p><figure class="highlight sql hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">UPDATE</span> mysql.user <span class="hljs-keyword">SET</span> <span class="hljs-keyword">Password</span>=<span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">'lanhoo'</span>) <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">User</span>=<span class="hljs-string">'root'</span>;</span><br><span class="line"><span class="hljs-keyword">flush</span> <span class="hljs-keyword">privileges</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装 &lt;a href=&quot;https://www.archlinux.org/packages/?name=mariadb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mariadb&lt;/a&gt; 软件包之后，你必须在启动 &lt;code&gt;mariadb.service&lt;/code&gt; &lt;strong&gt;之前&lt;/strong&gt;运行下面这条命令：&lt;/p&gt;
&lt;figure class=&quot;highlight python hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="配置" scheme="https://glanhoo.coding.me/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="mariadb" scheme="https://glanhoo.coding.me/tags/mariadb/"/>
    
      <category term="SQL" scheme="https://glanhoo.coding.me/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>摘录一个关于jupyter-notebook技巧的网页</title>
    <link href="https://glanhoo.coding.me/2019/10/05/%E6%91%98%E5%BD%95%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8Ejupyter-notebook%E6%8A%80%E5%B7%A7%E7%9A%84%E7%BD%91%E9%A1%B5/"/>
    <id>https://glanhoo.coding.me/2019/10/05/%E6%91%98%E5%BD%95%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8Ejupyter-notebook%E6%8A%80%E5%B7%A7%E7%9A%84%E7%BD%91%E9%A1%B5/</id>
    <published>2019-10-05T01:51:29.000Z</published>
    <updated>2019-11-23T08:03:55.953Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文在：<a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/" target="_blank" rel="noopener">https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/</a></p><p>若看不到，得翻墙</p></blockquote><h1 id="28-Jupyter-Notebook-Tips-Tricks-and-Shortcuts"><a href="#28-Jupyter-Notebook-Tips-Tricks-and-Shortcuts" class="headerlink" title="28 Jupyter Notebook Tips, Tricks, and Shortcuts"></a>28 Jupyter Notebook Tips, Tricks, and Shortcuts</h1><a id="more"></a><p><img src="/images/blog/1-LPnY8nOLg4S6_TG0DEXwsg-1.png" alt="jupyter-notebook best free data science tools"></p><h2 id="Jupyter-Notebook"><a href="#Jupyter-Notebook" class="headerlink" title="Jupyter Notebook"></a>Jupyter Notebook</h2><p>Jupyter notebook, formerly known as the IPython notebook, is a flexible tool that helps you create readable analyses, as you can keep code, images, comments, formulae and plots together. In this post, we’ve collected some of the top Jupyter notebook tips to quickly turn you into a Jupyter power user!</p><p><em>(This post is based on a post that originally appeared on <a href="http://arogozhnikov.github.io/2016/09/10/jupyter-features.html" target="_blank" rel="noopener">Alex Rogozhnikov’s blog, ‘Brilliantly Wrong’</a>. We have expanded the post and will continue to do so over time — if you have a suggestion please <a href="https://twitter.com/dataquestio" target="_blank" rel="noopener">let us know</a>. Thanks to Alex for graciously letting us republish his work here.)</em></p><p>Jupyter is quite extensible, supports many programming languages and is easily hosted on your computer or on almost any server — you only need to have ssh or http access. Best of all, it’s completely free. Now let’s dive in to our list of 28 (and counting!) Jupyter notebook tips!</p><p><img src="/images/blog/interface-screenshot.png" alt="interface-screenshot"></p><p><em>The Jupyter interface.</em></p><p>Project Jupyter was born out of the IPython project as the project evolved to become a notebook that could support multiple languages – hence its historical name as the IPython notebook. The name Jupyter is an indirect acronyum of the three core languages it was designed for: <strong>JU</strong>lia, <strong>PYT</strong>hon, and <strong>R</strong> and is inspired by the planet Jupiter.</p><p>When working with Python in Jupyter, the IPython kernel is used, which gives us some handy access to IPython features from within our Jupyter notebooks (more on that later!)</p><p>We’re going to show you 28 tips and tricks to make your life working with Jupyter easier.</p><h2 id="1-Keyboard-Shortcuts"><a href="#1-Keyboard-Shortcuts" class="headerlink" title="1. Keyboard Shortcuts"></a>1. Keyboard Shortcuts</h2><p>As any power user knows, keyboard shortcuts will save you lots of time. Jupyter stores a list of keybord shortcuts under the menu at the top: <code>Help &gt; Keyboard Shortcuts</code>, or by pressing <code>H</code> in command mode (more on that later). It’s worth checking this each time you update Jupyter, as more shortcuts are added all the time.</p><p>Another way to access keyboard shortcuts, and a handy way to learn them is to use the command palette: <code>Cmd + Shift + P</code> (or <code>Ctrl + Shift + P</code> on Linux and Windows). This dialog box helps you run any command by name – useful if you don’t know the keyboard shortcut for an action or if what you want to do does not have a keyboard shortcut. The functionality is similar to Spotlight search on a Mac, and once you start using it you’ll wonder how you lived without it!</p><p><img src="/images/blog/command-palette.gif" alt="command-palette"></p><p><em>The command palette.</em></p><p>Some of my favorites:</p><ul><li><code>Esc</code> will take you into command mode where you can navigate around your notebook with arrow keys.</li><li>While in command mode:<ul><li><code>A</code> to insert a new cell above the current cell, <code>B</code> to insert a new cell below.</li><li><code>M</code> to change the current cell to Markdown, <code>Y</code> to change it back to code</li><li><code>D + D</code> (press the key twice) to delete the current cell</li></ul></li><li><code>Enter</code> will take you from command mode back into edit mode for the given cell.</li><li><code>Shift + Tab</code> will show you the Docstring (documentation) for the the object you have just typed in a code cell – you can keep pressing this short cut to cycle through a few modes of documentation.</li><li><code>Ctrl + Shift + -</code> will split the current cell into two from where your cursor is.</li><li><code>Esc + F</code> Find and replace on your code but not the outputs.</li><li><code>Esc + O</code> Toggle cell output.</li><li>Select Multiple Cells:<ul><li><code>Shift + J</code> or <code>Shift + Down</code> selects the next sell in a downwards direction. You can also select sells in an upwards direction by using <code>Shift + K</code> or <code>Shift + Up</code>.</li><li>Once cells are selected, you can then delete / copy / cut / paste / run them as a batch. This is helpful when you need to move parts of a notebook.</li><li>You can also use <code>Shift + M</code> to merge multiple cells.</li></ul></li></ul><p><img src="/images/blog/multi-merge.gif" alt="multi-merge"></p><p><em>Merging multiple cells.</em></p><h2 id="2-Pretty-Display-of-Variables"><a href="#2-Pretty-Display-of-Variables" class="headerlink" title="2. Pretty Display of Variables"></a>2. Pretty Display of Variables</h2><p>The first part of this is pretty widely known. By finishing a Jupyter cell with the name of a variable or unassigned output of a statement, Jupyter will display that variable without the need for a print statement. This is especially useful when dealing with Pandas DataFrames, as the output is neatly formatted into a table.</p><p>What is known less, is that you can alter a modify the <code>ast_note_interactivity</code> kernel option to make jupyter do this for any variable or statement on it’s own line, so you can see the value of multiple statements at once.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> IPython.core.interactiveshell <span class="hljs-keyword">import</span> InteractiveShell</span><br><span class="line">InteractiveShell.ast_node_interactivity = <span class="hljs-string">"all"</span></span><br><span class="line"><span class="hljs-keyword">from</span> pydataset <span class="hljs-keyword">import</span> data</span><br><span class="line">quakes = data(<span class="hljs-string">'quakes'</span>)</span><br><span class="line">quakes.head()</span><br><span class="line">quakes.tail()</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left"></th><th align="left">lat</th><th align="left">long</th><th align="left">depth</th><th align="left">mag</th><th align="left">stations</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">-20.42</td><td align="left">181.62</td><td align="left">562</td><td align="left">4.8</td><td align="left">41</td></tr><tr><td align="left">2</td><td align="left">-20.62</td><td align="left">181.03</td><td align="left">650</td><td align="left">4.2</td><td align="left">15</td></tr><tr><td align="left">3</td><td align="left">-26.00</td><td align="left">184.10</td><td align="left">42</td><td align="left">5.4</td><td align="left">43</td></tr><tr><td align="left">4</td><td align="left">-17.97</td><td align="left">181.66</td><td align="left">626</td><td align="left">4.1</td><td align="left">19</td></tr><tr><td align="left">5</td><td align="left">-20.42</td><td align="left">181.96</td><td align="left">649</td><td align="left">4.0</td><td align="left">11</td></tr></tbody></table><table><thead><tr><th align="left"></th><th align="left">lat</th><th align="left">long</th><th align="left">depth</th><th align="left">mag</th><th align="left">stations</th></tr></thead><tbody><tr><td align="left">996</td><td align="left">-25.93</td><td align="left">179.54</td><td align="left">470</td><td align="left">4.4</td><td align="left">22</td></tr><tr><td align="left">997</td><td align="left">-12.28</td><td align="left">167.06</td><td align="left">248</td><td align="left">4.7</td><td align="left">35</td></tr><tr><td align="left">998</td><td align="left">-20.13</td><td align="left">184.20</td><td align="left">244</td><td align="left">4.5</td><td align="left">34</td></tr><tr><td align="left">999</td><td align="left">-17.40</td><td align="left">187.80</td><td align="left">40</td><td align="left">4.5</td><td align="left">14</td></tr><tr><td align="left">1000</td><td align="left">-21.59</td><td align="left">170.56</td><td align="left">165</td><td align="left">6.0</td><td align="left">119</td></tr></tbody></table><p>If you want to set this behaviour for all instances of Jupyter (Notebook and Console), simply create a file <code>~/.ipython/profile_default/ipython_config.py</code> with the lines below.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = get_config()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Run all nodes interactively</span></span><br><span class="line">c.InteractiveShell.ast_node_interactivity = <span class="hljs-string">"all"</span></span><br></pre></td></tr></table></figure><h2 id="3-Easy-links-to-documentation"><a href="#3-Easy-links-to-documentation" class="headerlink" title="3. Easy links to documentation"></a>3. Easy links to documentation</h2><p>Inside the <code>Help</code> menu you’ll find handy links to the online documentation for common libraries including NumPy, Pandas, SciPy and Matplotlib.</p><p>Don’t forget also that by prepending a library, method or variable with <code>?</code>, you can access the Docstring for quick reference on syntax.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?str.replace()</span><br><span class="line">Docstring:</span><br><span class="line">S.replace(old, new[, count]) -&gt; str</span><br><span class="line"></span><br><span class="line">Return a copy of S <span class="hljs-keyword">with</span> all occurrences of substringold replaced by new.  If the optional argument count isgiven, only the first count occurrences are replaced.</span><br><span class="line">Type:      method_descriptor</span><br></pre></td></tr></table></figure><h2 id="4-Plotting-in-notebooks"><a href="#4-Plotting-in-notebooks" class="headerlink" title="4. Plotting in notebooks"></a>4. Plotting in notebooks</h2><p>There are many options for generating plots in your notebooks.</p><ul><li><a href="http://matplotlib.org/" target="_blank" rel="noopener">matplotlib</a> (the de-facto standard), activated with <code>%matplotlib inline</code> – Here’s a Dataquest <a href="https://www.dataquest.io/blog/matplotlib-tutorial/" target="_blank" rel="noopener">Matplotlib Tutorial</a>.</li><li><code>%matplotlib notebook</code> provides interactivity but can be a little slow, since rendering is done server-side.</li><li><a href="http://seaborn.pydata.org/" target="_blank" rel="noopener">Seaborn</a> is built over Matplotlib and makes building more attractive plots easier. Just by importing Seaborn, your matplotlib plots are made ‘prettier’ without any code modification.</li><li><a href="https://github.com/mpld3/mpld3" target="_blank" rel="noopener">mpld3</a> provides alternative renderer (using d3) for matplotlib code. Quite nice, though incomplete.</li><li><a href="http://bokeh.pydata.org/en/latest/" target="_blank" rel="noopener">bokeh</a> is a better option for building interactive plots.</li><li><a href="https://plot.ly/" target="_blank" rel="noopener">plot.ly</a> can generate nice plots – this used to be a paid service only but was recently open sourced.</li><li><a href="https://github.com/altair-viz/altair" target="_blank" rel="noopener">Altair</a> is a relatively new declarative visualization library for Python. It’s easy to use and makes great looking plots, however the ability to customize those plots is not nearly as powerful as in Matplotlib.</li></ul><p><img src="/images/blog/bokeh.png" alt="bokeh"></p><p><em>The Jupyter interface.</em></p><h2 id="5-IPython-Magic-Commands"><a href="#5-IPython-Magic-Commands" class="headerlink" title="5. IPython Magic Commands"></a>5. IPython Magic Commands</h2><p>The <code>%matplotlib inline</code> you saw above was an example of a <em>IPython Magic</em> command. Being based on the IPython kernel, Jupyter has access to all the Magics from the IPython kernel, and they can make your life a lot easier!</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># This will list all magic commands%lsmagic</span></span><br><span class="line">Available line magics:</span><br><span class="line">%alias  %alias_magic  %autocall  %automagic  %autosave  %bookmark  %cat  %cd  %clear  %colors  %config  %connect_info  %cp  %debug  %dhist  %dirs  %doctest_mode  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %lf  %lk  %ll  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %lx  %macro  %magic  %man  %matplotlib  %mkdir  %more  %mv  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %popd  %pprint  %precision  %profile  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %rep  %rerun  %reset  %reset_selective  %rm  %rmdir  %run  %save  %sc  %set_env  %store  %sx  %system  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode</span><br><span class="line"></span><br><span class="line">Available cell magics:%%!  %%HTML  %%SVG  %%bash  %%capture  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%svg  %%sx  %%system  %%time  %%timeit  %%writefile</span><br><span class="line"></span><br><span class="line">Automagic <span class="hljs-keyword">is</span> ON, % prefix IS NOT needed <span class="hljs-keyword">for</span> line magics.</span><br></pre></td></tr></table></figure><p>I recommend browsing <a href="http://ipython.readthedocs.io/en/stable/interactive/magics.html" target="_blank" rel="noopener">the documentation for all IPython Magic commands</a> as you’ll no doubt find some that work for you. A few of my favorites are below:</p><h3 id="6-IPython-Magic-–-env-Set-Environment-Variables"><a href="#6-IPython-Magic-–-env-Set-Environment-Variables" class="headerlink" title="6. IPython Magic – %env: Set Environment Variables"></a>6. IPython Magic – %env: Set Environment Variables</h3><p>You can manage environment variables of your notebook without restarting the jupyter server process. Some libraries (like theano) use environment variables to control behavior, %env is the most convenient way.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Running %env without any arguments</span></span><br><span class="line"><span class="hljs-comment"># lists all environment variables</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># The line below sets the environment</span></span><br><span class="line"><span class="hljs-comment"># variable</span></span><br><span class="line">%env OMP_NUM_THREADS%env OMP_NUM_THREADS=<span class="hljs-number">4</span></span><br><span class="line">env: OMP_NUM_THREADS=<span class="hljs-number">4</span></span><br></pre></td></tr></table></figure><h3 id="7-IPython-Magic-–-run-Execute-python-code"><a href="#7-IPython-Magic-–-run-Execute-python-code" class="headerlink" title="7. IPython Magic – %run: Execute python code"></a>7. IPython Magic – %run: Execute python code</h3><p><code>%run</code> can execute python code from .py files – this is well-documented behavior. Lesser known is the fact that it can also execute other jupyter notebooks, which can quite useful.</p><p>Note that using <code>%run</code> is not the same as importing a python module.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># this will execute and show the output from</span></span><br><span class="line"><span class="hljs-comment"># all code cells of the specified notebook</span></span><br><span class="line">%run ./two-histograms.ipynb</span><br></pre></td></tr></table></figure><p><img src="/images/blog/two-hists.png" alt="two-hists"></p><h3 id="8-IPython-Magic-–-load-Insert-the-code-from-an-external-script"><a href="#8-IPython-Magic-–-load-Insert-the-code-from-an-external-script" class="headerlink" title="8. IPython Magic – %load: Insert the code from an external script"></a>8. IPython Magic – %load: Insert the code from an external script</h3><p>This will replace the contents of the cell with an external script. You can either use a file on your computer as a source, or alternatively a URL.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Before Running</span></span><br><span class="line">%load ./hello_world.py</span><br><span class="line"><span class="hljs-comment"># After Running</span></span><br><span class="line"><span class="hljs-comment"># %load ./hello_world.py</span></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:</span><br><span class="line">   print(<span class="hljs-string">"Hello World!"</span>)</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h3 id="9-IPython-Magic-–-store-Pass-variables-between-notebooks"><a href="#9-IPython-Magic-–-store-Pass-variables-between-notebooks" class="headerlink" title="9. IPython Magic – %store: Pass variables between notebooks."></a>9. IPython Magic – %store: Pass variables between notebooks.</h3><p>The <code>%store</code> command lets you pass variables between two different notebooks.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data = <span class="hljs-string">'this is the string I want to pass to different notebook'</span></span><br><span class="line">%store data</span><br><span class="line"><span class="hljs-keyword">del</span> data <span class="hljs-comment"># This has deleted the variable</span></span><br><span class="line">Stored <span class="hljs-string">'data'</span> (str)</span><br></pre></td></tr></table></figure><p>Now, in a new notebook…</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%store -r data</span><br><span class="line">print(data)</span><br><span class="line">this <span class="hljs-keyword">is</span> the string I want to <span class="hljs-keyword">pass</span> to different notebook</span><br></pre></td></tr></table></figure><h3 id="10-IPython-Magic-–-who-List-all-variables-of-global-scope"><a href="#10-IPython-Magic-–-who-List-all-variables-of-global-scope" class="headerlink" title="10. IPython Magic – %who: List all variables of global scope."></a>10. IPython Magic – %who: List all variables of global scope.</h3><p>The <code>%who</code> command without any arguments will list all variables that existing in the global scope. Passing a parameter like <code>str</code> will list only variables of that type.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">one = <span class="hljs-string">"for the money"</span></span><br><span class="line">two = <span class="hljs-string">"for the show"</span></span><br><span class="line">three = <span class="hljs-string">"to get ready now go cat go"</span></span><br><span class="line">%who str</span><br><span class="line">one   three   two</span><br></pre></td></tr></table></figure><h3 id="11-IPython-Magic-–-Timing"><a href="#11-IPython-Magic-–-Timing" class="headerlink" title="11. IPython Magic – Timing"></a>11. IPython Magic – Timing</h3><p>There are two IPython Magic commands that are useful for timing – <code>%%time</code> and <code>%timeit</code>. These are especially handy when you have some slow code and you’re trying to indentify where the issue is.</p><p><code>%%time</code> will give you information about a single run of the code in your cell.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(<span class="hljs-number">1000</span>):</span><br><span class="line">    time.sleep(<span class="hljs-number">0.01</span>) <span class="hljs-comment"># sleep for 0.01 seconds</span></span><br><span class="line">CPU times: user <span class="hljs-number">21.5</span> ms, sys: <span class="hljs-number">14.8</span> ms, total: <span class="hljs-number">36.3</span> ms</span><br><span class="line">Wall time: <span class="hljs-number">11.6</span> s</span><br></pre></td></tr></table></figure><p><code>%%timeit</code> uses the Python <a href="https://docs.python.org/3.5/library/timeit.html" target="_blank" rel="noopener">timeit module</a> which runs a statement 100,000 times (by default) and then provides the mean of the fastest three times.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> numpy</span><br><span class="line">%timeit numpy.random.normal(size=<span class="hljs-number">100</span>)</span><br><span class="line">The slowest run took <span class="hljs-number">7.29</span> times longer than the fastest. This could mean that an intermediate result <span class="hljs-keyword">is</span> being cached.</span><br><span class="line"><span class="hljs-number">100000</span> loops, best of <span class="hljs-number">3</span>: <span class="hljs-number">5.5</span> µs per loop</span><br></pre></td></tr></table></figure><h3 id="12-IPython-Magic-–-writefile-and-pycat-Export-the-contents-of-a-cell-Show-the-contents-of-an-external-script"><a href="#12-IPython-Magic-–-writefile-and-pycat-Export-the-contents-of-a-cell-Show-the-contents-of-an-external-script" class="headerlink" title="12. IPython Magic – %%writefile and %pycat: Export the contents of a cell/Show the contents of an external script"></a>12. IPython Magic – %%writefile and %pycat: Export the contents of a cell/Show the contents of an external script</h3><p>Using the <code>%%writefile</code> magic saves the contents of that cell to an external file. <code>%pycat</code> does the opposite, and shows you (in a popup) the syntax highlighted contents of an external file.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">%%writefile pythoncode.py</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> numpy</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">append_if_not_exists</span><span class="hljs-params">(arr, x)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> x <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> arr:</span><br><span class="line">        arr.append(x)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">some_useless_slow_function</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    arr = list()</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">10000</span>):</span><br><span class="line">        x = numpy.random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">10000</span>)</span><br><span class="line">        append_if_not_exists(arr, x)</span><br><span class="line">Writing pythoncode.py</span><br><span class="line">%pycat pythoncode.py</span><br><span class="line"><span class="hljs-keyword">import</span> numpy</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">append_if_not_exists</span><span class="hljs-params">(arr, x)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> x <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> arr:</span><br><span class="line">        arr.append(x)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">some_useless_slow_function</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    arr = list()</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">10000</span>):</span><br><span class="line">        x = numpy.random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">10000</span>)</span><br><span class="line">        append_if_not_exists(arr, x)</span><br></pre></td></tr></table></figure><p>### 13. IPython Magic – %prun: Show how much time your program spent in each function.Using <code>%prun statement_name</code> will give you an ordered table showing you the number of times each internal function was called within the statement, the time each call took as well as the cumulative time of all runs of the function.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">%prun some_useless_slow_function()</span><br><span class="line"><span class="hljs-number">26324</span> function calls <span class="hljs-keyword">in</span> <span class="hljs-number">0.556</span> seconds</span><br><span class="line"></span><br><span class="line">Ordered by: internal time</span><br><span class="line"></span><br><span class="line">ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line"> <span class="hljs-number">10000</span>    <span class="hljs-number">0.527</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.528</span>    <span class="hljs-number">0.000</span> :<span class="hljs-number">2</span>(append_if_not_exists)</span><br><span class="line"> <span class="hljs-number">10000</span>    <span class="hljs-number">0.022</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.022</span>    <span class="hljs-number">0.000</span> &#123;method <span class="hljs-string">'randint'</span> of <span class="hljs-string">'mtrand.RandomState'</span> objects&#125;</span><br><span class="line">     <span class="hljs-number">1</span>    <span class="hljs-number">0.006</span>    <span class="hljs-number">0.006</span>    <span class="hljs-number">0.556</span>    <span class="hljs-number">0.556</span> :<span class="hljs-number">6</span>(some_useless_slow_function)</span><br><span class="line">  <span class="hljs-number">6320</span>    <span class="hljs-number">0.001</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.001</span>    <span class="hljs-number">0.000</span> &#123;method <span class="hljs-string">'append'</span> of <span class="hljs-string">'list'</span> objects&#125;</span><br><span class="line">     <span class="hljs-number">1</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.556</span>    <span class="hljs-number">0.556</span> :<span class="hljs-number">1</span>()</span><br><span class="line">     <span class="hljs-number">1</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.556</span>    <span class="hljs-number">0.556</span> &#123;built-<span class="hljs-keyword">in</span> method <span class="hljs-keyword">exec</span>&#125;</span><br><span class="line">     <span class="hljs-number">1</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.000</span>    <span class="hljs-number">0.000</span> &#123;method <span class="hljs-string">'disable'</span> of <span class="hljs-string">'_lsprof.Profiler'</span> objects&#125;</span><br></pre></td></tr></table></figure><h3 id="14-IPython-Magic-–-Debugging-with-pdb"><a href="#14-IPython-Magic-–-Debugging-with-pdb" class="headerlink" title="14. IPython Magic – Debugging with %pdb"></a>14. IPython Magic – Debugging with %pdb</h3><p>Jupyter has own interface for <a href="https://docs.python.org/3.5/library/pdb.html" target="_blank" rel="noopener">The Python Debugger (<code>pdb</code>)</a>. This makes it possible to go inside the function and investigate what happens there.</p><p>You can view <a href="https://docs.python.org/3.5/library/pdb.html#debugger-commands" target="_blank" rel="noopener">a list of accepted commands for <code>pdb</code> here</a>.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">%pdb</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">pick_and_take</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    picked = numpy.random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">1000</span>)</span><br><span class="line">    <span class="hljs-keyword">raise</span> NotImplementedError()</span><br><span class="line"></span><br><span class="line">pick_and_take()</span><br><span class="line">Automatic pdb calling has been turned ON</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">NotImplementedError                       Traceback (most recent call last)</span><br><span class="line"> <span class="hljs-keyword">in</span> ()</span><br><span class="line">      <span class="hljs-number">5</span>     <span class="hljs-keyword">raise</span> NotImplementedError()</span><br><span class="line">      <span class="hljs-number">6</span></span><br><span class="line">----&gt; 7 pick_and_take()</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">in</span> pick_and_take()</span><br><span class="line">      <span class="hljs-number">3</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">pick_and_take</span><span class="hljs-params">()</span>:</span></span><br><span class="line">      <span class="hljs-number">4</span>     picked = numpy.random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">1000</span>)</span><br><span class="line">----&gt; 5     raise NotImplementedError()</span><br><span class="line">      <span class="hljs-number">6</span></span><br><span class="line">      <span class="hljs-number">7</span> pick_and_take()</span><br><span class="line"></span><br><span class="line">NotImplementedError:</span><br><span class="line">&gt; (<span class="hljs-number">5</span>)pick_and_take()</span><br><span class="line">      <span class="hljs-number">3</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">pick_and_take</span><span class="hljs-params">()</span>:</span></span><br><span class="line">      <span class="hljs-number">4</span>     picked = numpy.random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">1000</span>)</span><br><span class="line">----&gt; 5     raise NotImplementedError()</span><br><span class="line">      <span class="hljs-number">6</span></span><br><span class="line">      <span class="hljs-number">7</span> pick_and_take()</span><br><span class="line">ipdb&gt;</span><br></pre></td></tr></table></figure><h3 id="15-IPython-Magic-–-High-resolution-plot-outputs-for-Retina-notebooks"><a href="#15-IPython-Magic-–-High-resolution-plot-outputs-for-Retina-notebooks" class="headerlink" title="15. IPython Magic – High-resolution plot outputs for Retina notebooks"></a>15. IPython Magic – High-resolution plot outputs for Retina notebooks</h3><p>One line of IPython magic will give you double resolution plot output for Retina screens, such as the more recent Macbooks. <em>Note: the example below won’t render on non-retina screens</em></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = range(<span class="hljs-number">1000</span>)</span><br><span class="line">y = [i ** <span class="hljs-number">2</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x]</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.show();</span><br><span class="line">%config InlineBackend.figure_format =<span class="hljs-string">'retina'</span></span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.show();</span><br></pre></td></tr></table></figure><p><img src="/images/blog/hires-1.png" alt="hires-1"></p><p><img src="/images/blog/hires-2.png" alt="hires-2"></p><h2 id="16-Suppress-the-output-of-a-final-function"><a href="#16-Suppress-the-output-of-a-final-function" class="headerlink" title="16. Suppress the output of a final function."></a>16. Suppress the output of a final function.</h2><p>Sometimes it’s handy to suppress the output of the function on a final line, for instance when plotting. To do this, you just add a semicolon at the end.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt</span><br><span class="line"><span class="hljs-keyword">import</span> numpyx = numpy.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1000</span>)**<span class="hljs-number">1.5</span></span><br><span class="line"><span class="hljs-comment"># Here you get the output of the function</span></span><br><span class="line">plt.hist(x)</span><br><span class="line">(array([ <span class="hljs-number">216.</span>,  <span class="hljs-number">126.</span>,  <span class="hljs-number">106.</span>,   <span class="hljs-number">95.</span>,   <span class="hljs-number">87.</span>,   <span class="hljs-number">81.</span>,   <span class="hljs-number">77.</span>,   <span class="hljs-number">73.</span>,   <span class="hljs-number">71.</span>,   <span class="hljs-number">68.</span>]), array([ <span class="hljs-number">0.</span> ,  <span class="hljs-number">0.1</span>,  <span class="hljs-number">0.2</span>,  <span class="hljs-number">0.3</span>,  <span class="hljs-number">0.4</span>,  <span class="hljs-number">0.5</span>,  <span class="hljs-number">0.6</span>,  <span class="hljs-number">0.7</span>,  <span class="hljs-number">0.8</span>,  <span class="hljs-number">0.9</span>,  <span class="hljs-number">1.</span> ]),</span><br><span class="line">&lt;a list of <span class="hljs-number">10</span> Patch objects&gt;)</span><br><span class="line"><span class="hljs-comment"># By adding a semicolon at the end, the output is suppressed.plt.hist(x);</span></span><br></pre></td></tr></table></figure><p><img src="/images/blog/hist.png" alt="hist"></p><p><img src="https://www.dataquest.io/wp-content/uploads/2019/01/hist.png" alt="hist"></p><h2 id="17-Executing-Shell-Commands"><a href="#17-Executing-Shell-Commands" class="headerlink" title="17. Executing Shell Commands"></a>17. Executing Shell Commands</h2><p>It’s easy to execute a shell command from inside your notebook. You can use this to check what datasets are in available in your working folder:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!ls *.csv</span><br><span class="line">nba_2016.csv             titanic.csv</span><br><span class="line">pixar_movies.csv         whitehouse_employees.csv</span><br></pre></td></tr></table></figure><p>Or to check and manage packages.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">!pip install numpy</span><br><span class="line">!pip list | grep pandas</span><br><span class="line">Requirement already satisfied (use --upgrade to upgrade): numpy <span class="hljs-keyword">in</span> /Library/Frameworks/Python.framework/Versions/<span class="hljs-number">3.4</span>/lib/python3<span class="hljs-number">.4</span>/site-packages</span><br><span class="line">pandas (<span class="hljs-number">0.18</span><span class="hljs-number">.1</span>)</span><br></pre></td></tr></table></figure><h2 id="18-Using-LaTeX-for-forumlas"><a href="#18-Using-LaTeX-for-forumlas" class="headerlink" title="18. Using LaTeX for forumlas"></a>18. Using LaTeX for forumlas</h2><p>When you write <a href="https://www.latex-project.org/" target="_blank" rel="noopener">LaTeX</a> in a Markdown cell, it will be rendered as a formula using MathJax.</p><p>This:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$P(A \mid B) = \frac&#123;P(B \mid A)P(A)&#125;&#123;P(B)&#125;$</span><br></pre></td></tr></table></figure><p>Becomes this:</p><p>P(A∣B)=P(B∣A)P(A)P(B)</p><p>Markdown is an important part of notebooks, so don’t forget to use its expressiveness!</p><h2 id="19-Run-code-from-a-different-kernel-in-a-notebook"><a href="#19-Run-code-from-a-different-kernel-in-a-notebook" class="headerlink" title="19. Run code from a different kernel in a notebook"></a>19. Run code from a different kernel in a notebook</h2><p>If you want to, you can combine code from multiple kernels into one notebook.</p><p>Just use IPython Magics with the name of your kernel at the start of each cell that you want to use that Kernel for:</p><ul><li><code>%%bash</code></li><li><code>%%HTML</code></li><li><code>%%python2</code></li><li><code>%%python3</code></li><li><code>%%ruby</code></li><li><code>%%perl</code></li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">%%bash</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;<span class="hljs-number">1.</span><span class="hljs-number">.5</span>&#125;</span><br><span class="line">do</span><br><span class="line">   echo <span class="hljs-string">"i is $i"</span></span><br><span class="line">done</span><br><span class="line">i <span class="hljs-keyword">is</span> <span class="hljs-number">1</span></span><br><span class="line">i <span class="hljs-keyword">is</span> <span class="hljs-number">2</span></span><br><span class="line">i <span class="hljs-keyword">is</span> <span class="hljs-number">3</span></span><br><span class="line">i <span class="hljs-keyword">is</span> <span class="hljs-number">4</span></span><br><span class="line">i <span class="hljs-keyword">is</span> <span class="hljs-number">5</span></span><br></pre></td></tr></table></figure><h2 id="20-Install-other-kernels-for-Jupyter"><a href="#20-Install-other-kernels-for-Jupyter" class="headerlink" title="20. Install other kernels for Jupyter"></a>20. Install other kernels for Jupyter</h2><p>One of the nice features about Jupyter is ability to run kernels for different languages. As an example, here is how to get and R kernel running.</p><h3 id="Easy-Option-Installing-the-R-Kernel-Using-Anaconda"><a href="#Easy-Option-Installing-the-R-Kernel-Using-Anaconda" class="headerlink" title="Easy Option: Installing the R Kernel Using Anaconda"></a>Easy Option: Installing the R Kernel Using Anaconda</h3><p>If you used Anaconda to set up your environment, getting R working is extremely easy. Just run the below in your terminal:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c r r-essentials</span><br></pre></td></tr></table></figure><h3 id="Less-Easy-Option-Installing-the-R-Kernel-Manually"><a href="#Less-Easy-Option-Installing-the-R-Kernel-Manually" class="headerlink" title="Less Easy Option: Installing the R Kernel Manually"></a>Less Easy Option: Installing the R Kernel Manually</h3><p>If you are not using Anaconda, the process is a little more complex. Firstly, you’ll need to install R from <a href="https://cloud.r-project.org/" target="_blank" rel="noopener">CRAN</a> if you haven’t already.</p><p>Once that’s done, fire up an R console and run the following:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages(c(<span class="hljs-string">'repr'</span>, <span class="hljs-string">'IRdisplay'</span>, <span class="hljs-string">'crayon'</span>, <span class="hljs-string">'pbdZMQ'</span>, <span class="hljs-string">'devtools'</span>))</span><br><span class="line">devtools::install_github(<span class="hljs-string">'IRkernel/IRkernel'</span>)</span><br><span class="line">IRkernel::installspec()  <span class="hljs-comment"># to register the kernel in the current R installation</span></span><br></pre></td></tr></table></figure><h2 id="21-Running-R-and-Python-in-the-same-notebook"><a href="#21-Running-R-and-Python-in-the-same-notebook" class="headerlink" title="21. Running R and Python in the same notebook."></a>21. Running R and Python in the same notebook.</h2><p>The best solution to this is to install <a href="http://rpy2.bitbucket.org/" target="_blank" rel="noopener">rpy2</a> (requires a working version of R as well), which can be easily done with <code>pip</code>:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install rpy2</span><br></pre></td></tr></table></figure><p>You can then use the two languages together, and even pass variables inbetween:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%load_ext rpy2.ipython</span><br><span class="line">%R require(ggplot2)</span><br><span class="line">array([<span class="hljs-number">1</span>], dtype=int32)</span><br><span class="line"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd</span><br><span class="line">df = pd.DataFrame(&#123;</span><br><span class="line">        <span class="hljs-string">'Letter'</span>: [<span class="hljs-string">'a'</span>, <span class="hljs-string">'a'</span>, <span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-string">'c'</span>, <span class="hljs-string">'c'</span>, <span class="hljs-string">'c'</span>],</span><br><span class="line">        <span class="hljs-string">'X'</span>: [<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>],</span><br><span class="line">        <span class="hljs-string">'Y'</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>],</span><br><span class="line">        <span class="hljs-string">'Z'</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">%%R -i df</span><br><span class="line">ggplot(data = df) + geom_point(aes(x = X, y= Y, color = Letter, size = Z))</span><br></pre></td></tr></table></figure><p><img src="/images/blog/ggplot.png" alt="ggplot"></p><p><em>Example courtesy <a href="http://blog.revolutionanalytics.com/2016/01/pipelining-r-python.html" target="_blank" rel="noopener">Revolutions Blog</a></em></p><h2 id="22-Writing-functions-in-other-languages"><a href="#22-Writing-functions-in-other-languages" class="headerlink" title="22. Writing functions in other languages"></a>22. Writing functions in other languages</h2><p>Sometimes the speed of numpy is not enough and I need to write some fast code.In principle, you can compile function in the dynamic library and write python wrappers…</p><p>But it is much better when this boring part is done for you, right?</p><p>You can write functions in cython or fortran and use those directly from python code.</p><p>First you’ll need to install:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">!pip install cython fortran-magic</span><br><span class="line">%load_ext Cython</span><br><span class="line">%%cython</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myltiply_by_2</span><span class="hljs-params">(float x)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">2.0</span> * x</span><br><span class="line">myltiply_by_2(<span class="hljs-number">23.</span>)</span><br></pre></td></tr></table></figure><p>Personally I prefer to use fortran, which I found very convenient for writing number-crunching functions. More details of usage can be found <a href="http://arogozhnikov.github.io/2015/11/29/using-fortran-from-python.html" target="_blank" rel="noopener">here</a>.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">%load_ext fortranmagic</span><br><span class="line">%%fortran</span><br><span class="line">subroutine compute_fortran(x, y, z)</span><br><span class="line">    real, intent(<span class="hljs-keyword">in</span>) :: x(:), y(:)</span><br><span class="line">    real, intent(out) :: z(size(x, <span class="hljs-number">1</span>))</span><br><span class="line"></span><br><span class="line">    z = sin(x + y)</span><br><span class="line"></span><br><span class="line">end subroutine compute_fortran</span><br><span class="line">compute_fortran([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>])</span><br></pre></td></tr></table></figure><p>There are also different jitter systems which can speed up your python code. More examples <a href="http://arogozhnikov.github.io/2015/09/08/SpeedBenchmarks.html" target="_blank" rel="noopener">can be found here</a>.</p><h2 id="23-Multicursor-support"><a href="#23-Multicursor-support" class="headerlink" title="23. Multicursor support"></a>23. Multicursor support</h2><p>Jupyter supports mutiple cursors, similar to Sublime Text. Simply click and drag your mouse while holding down <code>Alt</code>.</p><p><img src="/images/blog/multiline.gif" alt="multiline"></p><p><em>Multicursor support.</em></p><h2 id="24-Jupyter-contrib-extensions"><a href="#24-Jupyter-contrib-extensions" class="headerlink" title="24. Jupyter-contrib extensions"></a>24. Jupyter-contrib extensions</h2><p><a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener">Jupyter-contrib extensions</a> is a family of extensions which give Jupyter a lot more functionality, including e.g. <code>jupyter spell-checker</code> and <code>code-formatter</code>.</p><p>The following commands will install the extensions, as well as a menu based configurator that will help you browse and enable the extensions from the main Jupyter notebook screen.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">!pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master</span><br><span class="line">!pip install jupyter_nbextensions_configurator</span><br><span class="line">!jupyter contrib nbextension install --user</span><br><span class="line">!jupyter nbextensions_configurator enable --user</span><br></pre></td></tr></table></figure><p><img src="/images/blog/nbextensions.png" alt="nbextensions"></p><p><em>The nbextension configurator.</em></p><h2 id="25-Create-a-presentation-from-a-Jupyter-notebook"><a href="#25-Create-a-presentation-from-a-Jupyter-notebook" class="headerlink" title="25. Create a presentation from a Jupyter notebook."></a>25. Create a presentation from a Jupyter notebook.</h2><p>Damian Avila’s <a href="https://github.com/damianavila/RISE" target="_blank" rel="noopener">RISE</a> allows you to create a powerpoint style presentation from an existing notebook.</p><p>You can install RISE using conda:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c damianavila82 rise</span><br></pre></td></tr></table></figure><p>Or alternatively pip:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install RISE</span><br></pre></td></tr></table></figure><p>And then run the following code to install and enable the extension:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jupyter-nbextension install rise --py --sys-prefix</span><br><span class="line">jupyter-nbextension enable rise --py --sys-prefix</span><br></pre></td></tr></table></figure><h2 id="26-The-Jupyter-output-system"><a href="#26-The-Jupyter-output-system" class="headerlink" title="26. The Jupyter output system"></a>26. The Jupyter output system</h2><p>Notebooks are displayed as HTML and the cell output can be HTML, so you can return virtually anything: video/audio/images.</p><p>In this example I scan the folder with images in my repository and show thumbnails of the first 5:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"><span class="hljs-keyword">from</span> IPython.display <span class="hljs-keyword">import</span> display, Image</span><br><span class="line">names = [f <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> os.listdir(<span class="hljs-string">'/images/ml_demonstrations/'</span>) <span class="hljs-keyword">if</span> f.endswith(<span class="hljs-string">'.png'</span>)]</span><br><span class="line"><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> names[:<span class="hljs-number">5</span>]:</span><br><span class="line">    display(Image(<span class="hljs-string">'/images/ml_demonstrations/'</span> + name, width=<span class="hljs-number">100</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/blog/img1.png" alt="img1"></p><p><img src="/images/blog/img2.png" alt="img2"></p><p><img src="/images/blog/img3.png" alt="img3"></p><p><img src="/images/blog/img4.png" alt="img4"></p><p><img src="/images/blog/img5.png" alt="img5"></p><p>We can create the same list with a bash command, because magics and bash calls return python variables:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">names = !ls /images/ml_demonstrations/*.png</span><br><span class="line">names[:<span class="hljs-number">5</span>]</span><br><span class="line">[<span class="hljs-string">'/images/ml_demonstrations/colah_embeddings.png'</span>,</span><br><span class="line"><span class="hljs-string">'/images/ml_demonstrations/convnetjs.png'</span>,</span><br><span class="line"><span class="hljs-string">'/images/ml_demonstrations/decision_tree.png'</span>,</span><br><span class="line"><span class="hljs-string">'/images/ml_demonstrations/decision_tree_in_course.png'</span>,</span><br><span class="line"><span class="hljs-string">'/images/ml_demonstrations/dream_mnist.png'</span>]</span><br></pre></td></tr></table></figure><h2 id="27-‘Big-data’-analysis"><a href="#27-‘Big-data’-analysis" class="headerlink" title="27. ‘Big data’ analysis"></a>27. ‘Big data’ analysis</h2><p>A number of solutions are available for querying/processing large data samples:</p><ul><li><a href="https://github.com/ipython/ipyparallel" target="_blank" rel="noopener">ipyparallel (formerly ipython cluster)</a> is a good option for simple map-reduce operations in python. We use it in <a href="https://github.com/yandex/rep" target="_blank" rel="noopener">rep</a> to train many machine learning models in parallel</li><li><a href="http://www.cloudera.com/documentation/enterprise/5-5-x/topics/spark_ipython.html" target="_blank" rel="noopener">pyspark</a></li><li>spark-sql magic <a href="https://github.com/jupyter-incubator/sparkmagic" target="_blank" rel="noopener">%%sql</a></li></ul><h2 id="28-Sharing-notebooks"><a href="#28-Sharing-notebooks" class="headerlink" title="28. Sharing notebooks"></a>28. Sharing notebooks</h2><p>The easiest way to share your notebook is simply using the notebook file (.ipynb), but for those who don’t use Jupyter, you have a few options:</p><ul><li><p>Convert notebooks to html file using the <code>File &gt; Download as &gt; HTML</code> Menu option.</p></li><li><p>Share your notebook file with</p></li></ul><p>  gists</p><p>  or on github, both of which render the notebooks. See</p><p>  this example</p><p>  .</p><ul><li>If you upload your notebook to a github repository, you can use the handy <a href="http://mybinder.org/" target="_blank" rel="noopener">mybinder</a> service to allow someone half an hour of interactive Jupyter access to your repository.</li></ul><ul><li><p>Setup your own system with <a href="https://github.com/jupyterhub/jupyterhub" target="_blank" rel="noopener">jupyterhub</a>, this is very handy when you organize mini-course or workshop and don’t have time to care about students machines.</p></li><li><p>Store your notebook e.g. in dropbox and put the link to <a href="http://nbviewer.jupyter.org/" target="_blank" rel="noopener">nbviewer</a>. nbviewer will render the notebook from whichever source you host it.</p></li><li><p>Use the <code>File &gt; Download as &gt; PDF</code> menu to save your notebook as a PDF. If you’re going this route, I highly recommend reading Julius Schulz’s excellent article <a href="http://blog.juliusschulz.de/blog/ultimate-ipython-notebook" target="_blank" rel="noopener">Making publication ready Python notebooks</a>.</p></li><li><p><a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/" target="_blank" rel="noopener">Create a blog using Pelican from your Jupyter notebooks</a>.</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文在：&lt;a href=&quot;https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;若看不到，得翻墙&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;28-Jupyter-Notebook-Tips-Tricks-and-Shortcuts&quot;&gt;&lt;a href=&quot;#28-Jupyter-Notebook-Tips-Tricks-and-Shortcuts&quot; class=&quot;headerlink&quot; title=&quot;28 Jupyter Notebook Tips, Tricks, and Shortcuts&quot;&gt;&lt;/a&gt;28 Jupyter Notebook Tips, Tricks, and Shortcuts&lt;/h1&gt;
    
    </summary>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="jupyter" scheme="https://glanhoo.coding.me/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib中文显示问题</title>
    <link href="https://glanhoo.coding.me/2019/10/03/matplotlib%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <id>https://glanhoo.coding.me/2019/10/03/matplotlib%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</id>
    <published>2019-10-03T11:13:07.000Z</published>
    <updated>2019-11-23T08:27:34.827Z</updated>
    
    <content type="html"><![CDATA[<ol><li>查看matplotlib默认的设置文件所在位置</li></ol><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> matplotlib</span><br><span class="line">print(matplotlib.matplotlib_fname())</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>结果显示：</li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">'/home/lanhoo/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc'</span></span><br></pre></td></tr></table></figure><ol start="2"><li>查看该文件内容</li></ol><ul><li>摘录如下：</li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#### MATPLOTLIBRC FORMAT</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">## This is a sample matplotlib configuration file - you can find a copy</span></span><br><span class="line"><span class="hljs-comment">## of it on your system in</span></span><br><span class="line"><span class="hljs-comment">## site-packages/matplotlib/mpl-data/matplotlibrc.  If you edit it</span></span><br><span class="line"><span class="hljs-comment">## there, please note that it will be overwritten in your next install.</span></span><br><span class="line"><span class="hljs-comment">## If you want to keep a permanent local copy that will not be</span></span><br><span class="line"><span class="hljs-comment">## overwritten, place it in the following location:</span></span><br><span class="line"><span class="hljs-comment">## unix/linux:</span></span><br><span class="line"><span class="hljs-comment">##      $HOME/.config/matplotlib/matplotlibrc or</span></span><br><span class="line"><span class="hljs-comment">##      $XDG_CONFIG_HOME/matplotlib/matplotlibrc (if $XDG_CONFIG_HOME is set)</span></span><br><span class="line"><span class="hljs-comment">## other platforms:</span></span><br><span class="line"><span class="hljs-comment">##      $HOME/.matplotlib/matplotlibrc</span></span><br><span class="line"><span class="hljs-comment">##</span></span><br></pre></td></tr></table></figure><ul><li>上面提示说以后安装会重写这个文件，导致你所修改的失效。最好根据上面的提示自定义一个文件 <code>matplotlibrc</code> </li><li>根据系统找到有这个文件夹：<code>$HOME/.config/matplotlib/</code> </li><li>在上面的文件夹里新建一个文件<code>matplotlibrc</code> </li></ul><ol start="3"><li><code>matplotlibrc</code> 的配置内容如下：</li></ol><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">font.family         :</span> <span class="hljs-string">sans-serif</span></span><br><span class="line"><span class="hljs-attr">font.sans-serif     :</span> <span class="hljs-string">SimHei,</span> <span class="hljs-string">DejaVu</span> <span class="hljs-string">Sans,</span> <span class="hljs-string">Bitstream</span> <span class="hljs-string">Vera</span> <span class="hljs-string">Sans,</span> <span class="hljs-string">Computer</span> <span class="hljs-string">Modern</span> <span class="hljs-string">Sans</span> <span class="hljs-string">Serif,</span> <span class="hljs-string">Lucida</span> <span class="hljs-string">Grande,</span> <span class="hljs-string">Verdana,</span> <span class="hljs-string">Geneva,</span> <span class="hljs-string">Lucid,</span> <span class="hljs-string">Arial,</span> <span class="hljs-string">Helvetica,</span> <span class="hljs-string">Avant</span> <span class="hljs-string">Garde,</span> <span class="hljs-string">sans-serif</span></span><br><span class="line"><span class="hljs-attr">axes.unicode_minus  :</span> <span class="hljs-literal">False</span></span><br></pre></td></tr></table></figure><ul><li><code>SimHei</code> 字体没有安装的请下载安装，网上多得是。</li></ul><ol start="4"><li>重启电脑问题解决，或者执行下面的代码，重新执行之前的ipython或py文件</li></ol><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> matplotlib.font_manager <span class="hljs-keyword">import</span> _rebuild</span><br><span class="line"></span><br><span class="line">_rebuild() <span class="hljs-comment">#reload一下</span></span><br></pre></td></tr></table></figure><ol start="5"><li>检验设置成功与否，执行第一步的代码， 结果如下：</li></ol><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">'/home/lanhoo/.config/matplotlib/matplotlibrc'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;查看matplotlib默认的设置文件所在位置&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; matplotlib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(matplotlib.matplotlib_fname())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="配置" scheme="https://glanhoo.coding.me/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="matplotlib" scheme="https://glanhoo.coding.me/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>manjaro系统必备软件</title>
    <link href="https://glanhoo.coding.me/2019/10/02/manjaro%E7%B3%BB%E7%BB%9F%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/"/>
    <id>https://glanhoo.coding.me/2019/10/02/manjaro%E7%B3%BB%E7%BB%9F%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6/</id>
    <published>2019-10-02T07:28:37.000Z</published>
    <updated>2019-11-23T09:02:45.340Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一开始使用的是<code>ubuntu</code> 系列的系统，但总有些软件安装好麻烦，即使安装好了，总会字体、介面、图标等等问题。后来经一朋友的帮助下，安装成功了<code>arch</code> ,软件库非常丰富，当组件、软件、系统方面有更新会提示升级，非常便捷友好。后来安装<code>QGIS</code>后，检测不到<code>python</code>，使用不了；同时由于我是多系统，一不小心把<strong>GRUB</strong>搞坏了，每次都要进入<code>arch</code>系统都要敲命令改参数。</p><p>我不得不考虑更换系统了，那哥们是一条一条命令把<code>arch</code>装好的，对我来说难度有点大。后来了解到arch系列下的<code>manjaro</code>，它不仅美化了介面，也集成了<code>arch</code>的软件管理系统。尝试了下，能够成功使用<code>QGIS</code>,安装系统也像之前安装<code>ubuntu</code>一样便捷。</p><p>下面就罗列一些安装必备软件。</p></blockquote><a id="more"></a><h2 id="fusuma"><a href="#fusuma" class="headerlink" title="fusuma"></a>fusuma</h2><blockquote><p>当在win系统或mac上使用三指或四指使用触摸板时，非常方便快捷，而在linux上实现三指或四指功能就不得不提这个<code>fusuma</code>。</p></blockquote><p><a href="https://github.com/iberianpig/fusuma" target="_blank" rel="noopener">github地址</a></p><ul><li>开始尝试输入<code>sudo pacman -S fusuma</code>， 没有</li></ul><p><img src="/images/blog/image-084754578.png" alt="image-084754578"></p><ul><li>在软件管理器里有，点击安装</li></ul><p><img src="/images/blog/image-084946795.png" alt="image-084946795"></p><ul><li>修改配置文件<code>.config/fusuma/config.yml</code>，我的配置如下：</li></ul><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">swipe:</span></span><br><span class="line">  <span class="hljs-attr">3:</span> </span><br><span class="line">    <span class="hljs-attr">left:</span> </span><br><span class="line">      <span class="hljs-attr">shortcut:</span> <span class="hljs-string">'xdotool key alt+Left'</span></span><br><span class="line">    <span class="hljs-attr">right:</span> </span><br><span class="line">      <span class="hljs-attr">shortcut:</span> <span class="hljs-string">'xdotool key alt+Right'</span></span><br><span class="line">    <span class="hljs-attr">up:</span> </span><br><span class="line">      <span class="hljs-attr">shortcut:</span> <span class="hljs-string">'xdotool key super+d'</span> <span class="hljs-comment"># 显示桌面</span></span><br><span class="line">    <span class="hljs-attr">down:</span> </span><br><span class="line">      <span class="hljs-attr">shortcut:</span> <span class="hljs-string">'xdotool key ctrl+F9'</span> <span class="hljs-comment"># 选择当前桌面的程序</span></span><br><span class="line">  <span class="hljs-attr">4:</span></span><br><span class="line">    <span class="hljs-attr">left:</span></span><br><span class="line">      <span class="hljs-attr">command:</span> <span class="hljs-string">'xdotool key ctrl+F1'</span> <span class="hljs-comment"># 切换左边的桌面</span></span><br><span class="line">    <span class="hljs-attr">right:</span></span><br><span class="line">      <span class="hljs-attr">command:</span> <span class="hljs-string">'xdotool key ctrl+F2'</span> <span class="hljs-comment"># 切换右边的桌面</span></span><br><span class="line">    <span class="hljs-attr">up:</span></span><br><span class="line">      <span class="hljs-attr">command:</span> <span class="hljs-string">'xdotool key ctrl+F8'</span> <span class="hljs-comment"># 选择桌面</span></span><br><span class="line">    <span class="hljs-attr">down:</span></span><br><span class="line">      <span class="hljs-attr">command:</span> <span class="hljs-string">'xdotool key ctrl+F10'</span> <span class="hljs-comment"># 选择全部桌面的程序</span></span><br><span class="line"><span class="hljs-attr">pinch:</span></span><br><span class="line">  <span class="hljs-attr">in:</span></span><br><span class="line">    <span class="hljs-attr">shortcut:</span> <span class="hljs-string">'ctrl+shift+plus'</span></span><br><span class="line">  <span class="hljs-attr">out:</span></span><br><span class="line">    <span class="hljs-attr">shortcut:</span> <span class="hljs-string">'ctrl+minus'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-attr">threshold:</span></span><br><span class="line">  <span class="hljs-attr">swipe:</span> <span class="hljs-number">0.5</span></span><br><span class="line">  <span class="hljs-attr">pinch:</span> <span class="hljs-number">0.2</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-attr">interval:</span></span><br><span class="line">  <span class="hljs-attr">swipe:</span> <span class="hljs-number">0.2</span></span><br><span class="line">  <span class="hljs-attr">pinch:</span> <span class="hljs-number">0.2</span></span><br></pre></td></tr></table></figure><p><img src="/images/blog/image-092326753.png" alt="image-092326753"></p><ul><li><p>设置开机自动启动</p><ul><li>编写脚本文件<code>fusuma.sh</code>：</li></ul><figure class="highlight sh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">fusuma &amp;</span><br></pre></td></tr></table></figure><ul><li>在开机和关机设置中的自动启动添加这个脚本文件，重启就可以了。</li></ul></li></ul><p><img src="/images/blog/image-090741223.png" alt="image-090741223"></p><ul><li>当出现这样的错误时：</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[lanhoo@lanhoo-pc sh_files]$ fusuma</span><br><span class="line">E, [2019-10-28T15:46:38.774809 <span class="hljs-comment">#1647] ERROR -- : Touchpad is not found</span></span><br></pre></td></tr></table></figure><ul><li>要给input group 加上当前的用户</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a <span class="hljs-variable">$USER</span> input</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[lanhoo@lanhoo-pc sh_files]$ sudo gpasswd -a <span class="hljs-variable">$USER</span> input</span><br><span class="line">[sudo] lanhoo 的密码：</span><br><span class="line">正在将用户“lanhoo”加入到“input”组中</span><br></pre></td></tr></table></figure><h2 id="GoldenDict"><a href="#GoldenDict" class="headerlink" title="GoldenDict"></a>GoldenDict</h2><blockquote><p>词典必备，下了两个词典，一个带有发音的，另一个多了2w个词</p></blockquote><p><img src="/images/blog/image-091149032.png" alt="image-091149032"></p><p><img src="/images/blog/image-091610119.png" alt="image-091610119"></p><ul><li>若发音不行，要设置一下：<code>cvlc  --play-and-exit -Vdummy</code></li></ul><p><img src="/images/blog/image-091746581.png" alt="image-091746581"></p><ul><li>选中单词翻译的快捷键：<code>ctrl + c + c</code></li></ul><h2 id="zeal"><a href="#zeal" class="headerlink" title="zeal"></a>zeal</h2><blockquote><p>文档管理查看工具，程序员必备，在mac上有<code>dash</code>，而在win和linux上可以使用<code>zeal</code></p></blockquote><p><img src="/images/blog/image-092635443.png" alt="image-092635443"></p><ul><li>设定显示快捷键</li></ul><p><img src="/images/blog/image-095538146.png" alt="image-095538146"></p><ul><li><code>Visual Studio Code</code>关联<code>zeal</code> 的插件安装，快捷键使用<code>ctrl + h</code></li></ul><p><img src="/images/blog/image-095847297.png" alt="image-095847297"></p><ul><li>一些docset的feed:<a href="https://github.com/quericy/Zeal-docset-CN" target="_blank" rel="noopener">https://github.com/quericy/Zeal-docset-CN</a></li></ul><h2 id="flameshot"><a href="#flameshot" class="headerlink" title="flameshot"></a>flameshot</h2><blockquote><p>截图工具</p></blockquote><p><img src="/images/blog/image-093531940.png" alt="image-093531940"></p><ul><li>设定快捷键</li></ul><p><img src="/images/blog/image-093932302.png" alt="image-093932302"></p><h2 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h2><blockquote><p>markdown编辑器</p></blockquote><p><img src="/images/blog/image-093803300.png" alt="image-093803300"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一开始使用的是&lt;code&gt;ubuntu&lt;/code&gt; 系列的系统，但总有些软件安装好麻烦，即使安装好了，总会字体、介面、图标等等问题。后来经一朋友的帮助下，安装成功了&lt;code&gt;arch&lt;/code&gt; ,软件库非常丰富，当组件、软件、系统方面有更新会提示升级，非常便捷友好。后来安装&lt;code&gt;QGIS&lt;/code&gt;后，检测不到&lt;code&gt;python&lt;/code&gt;，使用不了；同时由于我是多系统，一不小心把&lt;strong&gt;GRUB&lt;/strong&gt;搞坏了，每次都要进入&lt;code&gt;arch&lt;/code&gt;系统都要敲命令改参数。&lt;/p&gt;
&lt;p&gt;我不得不考虑更换系统了，那哥们是一条一条命令把&lt;code&gt;arch&lt;/code&gt;装好的，对我来说难度有点大。后来了解到arch系列下的&lt;code&gt;manjaro&lt;/code&gt;，它不仅美化了介面，也集成了&lt;code&gt;arch&lt;/code&gt;的软件管理系统。尝试了下，能够成功使用&lt;code&gt;QGIS&lt;/code&gt;,安装系统也像之前安装&lt;code&gt;ubuntu&lt;/code&gt;一样便捷。&lt;/p&gt;
&lt;p&gt;下面就罗列一些安装必备软件。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="系统配置" scheme="https://glanhoo.coding.me/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="软件" scheme="https://glanhoo.coding.me/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="arch" scheme="https://glanhoo.coding.me/tags/arch/"/>
    
      <category term="linux" scheme="https://glanhoo.coding.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>manjaro系统配置</title>
    <link href="https://glanhoo.coding.me/2019/10/01/manjaro%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    <id>https://glanhoo.coding.me/2019/10/01/manjaro%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/</id>
    <published>2019-10-01T10:32:29.000Z</published>
    <updated>2019-11-25T01:43:44.949Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h2><p>使用国内的源有更快的下载速度，pacman能够测试不同源的速度并给它们排名，从中选择一个快的即可。选择的是上海交大sjtu的源。</p><a id="more"></a><p><img src="/images/blog/image-20191123085304856.png" alt="image-20191123085304856"></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syy</span><br><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure><h2 id="添加arch源"><a href="#添加arch源" class="headerlink" title="添加arch源"></a>添加arch源</h2><p>编辑<code>/etc/pacman.conf</code>文件，加入下面的内容：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://mirrors.sjtug.sjtu.edu.cn/archlinux-cn/$arch</span><br></pre></td></tr></table></figure><p>然后</p><p><code>sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</code></p><p>现在可以升级一下系统：</p><p><code>sudo pacman -Su</code></p><h2 id="添加两个命令pbcopy和pbpaste"><a href="#添加两个命令pbcopy和pbpaste" class="headerlink" title="添加两个命令pbcopy和pbpaste"></a>添加两个命令<code>pbcopy</code>和<code>pbpaste</code></h2><ul><li>先安装<code>xsel</code>：<ul><li><code>sudo pacman -S xsel</code></li></ul></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[lanhoo@lanhoo-pc ~]$ sudo pacman -S xsel</span><br><span class="line">[sudo] lanhoo 的密码：</span><br><span class="line">正在解析依赖关系...</span><br><span class="line">正在查找软件包冲突...</span><br><span class="line"></span><br><span class="line">软件包 (1) xsel-1.2.0.20160929-2</span><br><span class="line"></span><br><span class="line">下载大小:   0.02 MiB</span><br><span class="line">全部安装大小：  0.04 MiB</span><br><span class="line"></span><br><span class="line">:: 进行安装吗？ [Y/n] y</span><br></pre></td></tr></table></figure><ul><li>添加以下语句到<code>~/.bashrc</code></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">alias</span> pbcopy=<span class="hljs-string">'xsel --clipboard --input'</span></span><br><span class="line"><span class="hljs-built_in">alias</span> pbpaste=<span class="hljs-string">'xsel --clipboard --output'</span></span><br></pre></td></tr></table></figure><ul><li><code>source .bashrc</code>使刚才的修改生效</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[lanhoo@lanhoo-pc ~]$ <span class="hljs-built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure><h2 id="修改history显示效果以及保存条数"><a href="#修改history显示效果以及保存条数" class="headerlink" title="修改history显示效果以及保存条数"></a>修改history显示效果以及保存条数</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">export</span> HISTTIMEFORMAT=<span class="hljs-string">"%Y/%m/%d %T "</span></span><br><span class="line"><span class="hljs-built_in">export</span> HISTSIZE=10000</span><br><span class="line"><span class="hljs-built_in">export</span> HISTFILESIZE=10000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;更换国内源&quot;&gt;&lt;a href=&quot;#更换国内源&quot; class=&quot;headerlink&quot; title=&quot;更换国内源&quot;&gt;&lt;/a&gt;更换国内源&lt;/h2&gt;&lt;p&gt;使用国内的源有更快的下载速度，pacman能够测试不同源的速度并给它们排名，从中选择一个快的即可。选择的是上海交大sjtu的源。&lt;/p&gt;
    
    </summary>
    
    
      <category term="系统配置" scheme="https://glanhoo.coding.me/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="arch" scheme="https://glanhoo.coding.me/tags/arch/"/>
    
      <category term="linux" scheme="https://glanhoo.coding.me/tags/linux/"/>
    
      <category term="配置" scheme="https://glanhoo.coding.me/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>mysql与pandas对照学习(9)</title>
    <link href="https://glanhoo.coding.me/2019/09/28/mysql%E4%B8%8Epandas%E5%AF%B9%E7%85%A7%E5%AD%A6%E4%B9%A0-9/"/>
    <id>https://glanhoo.coding.me/2019/09/28/mysql%E4%B8%8Epandas%E5%AF%B9%E7%85%A7%E5%AD%A6%E4%B9%A0-9/</id>
    <published>2019-09-28T13:06:53.000Z</published>
    <updated>2019-11-24T00:54:11.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Self-join"><a href="#Self-join" class="headerlink" title="Self join"></a>Self join</h2><p><a href="https://sqlzoo.net/wiki/Self_join" target="_blank" rel="noopener">Self join</a></p><h3 id="Edinburgh-Buses"><a href="#Edinburgh-Buses" class="headerlink" title="Edinburgh Buses"></a>Edinburgh Buses</h3><p><a href="https://sqlzoo.net/wiki/Edinburgh_Buses." target="_blank" rel="noopener" title="Edinburgh Buses.">Details of the database</a> Looking at the data</p><p>stops(<strong>id</strong>, name)route(<strong>num</strong>, <strong>company</strong>, <strong>pos</strong>, <em>stop</em>)</p><table><thead><tr><th><strong>stops</strong></th></tr></thead><tbody><tr><td><em>id</em></td></tr><tr><td>name</td></tr></tbody></table><table><thead><tr><th><strong>route</strong></th></tr></thead><tbody><tr><td><em>num</em></td></tr><tr><td><em>company</em></td></tr><tr><td><em>pos</em></td></tr><tr><td>stop</td></tr></tbody></table><a id="more"></a><hr><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%load_ext sql</span><br><span class="line">%sql mysql+pymysql://root:lanhoo@localhost/dbs</span><br><span class="line"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd</span><br><span class="line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</span><br><span class="line"><span class="hljs-keyword">import</span> sqlalchemy</span><br><span class="line">engine = sqlalchemy.create_engine(<span class="hljs-string">"mysql+pymysql://root:lanhoo@localhost/dbs"</span>)</span><br><span class="line">stops = pd.read_sql_table(<span class="hljs-string">"stops"</span>, engine)</span><br><span class="line">route = pd.read_sql_table(<span class="hljs-string">"route"</span>, engine)</span><br></pre></td></tr></table></figure><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p>How many <strong>stops</strong> are in the database.</p><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT COUNT(id) FROM stops;</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs1 rows affected.</code></pre><table>    <tr>        <th>COUNT(id)</th>    </tr>    <tr>        <td>246</td>    </tr></table><h3 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stops.id.count()</span><br></pre></td></tr></table></figure><pre><code>246</code></pre><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p>Find the <strong>id</strong> value for the stop ‘Craiglockhart’</p><h3 id="mysql-1"><a href="#mysql-1" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT id FROM stops WHERE name = <span class="hljs-string">'Craiglockhart'</span>;</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs1 rows affected.</code></pre><table>    <tr>        <th>id</th>    </tr>    <tr>        <td>53</td>    </tr></table><h3 id="pandas-1"><a href="#pandas-1" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stops.query(<span class="hljs-string">"name == 'Craiglockhart'"</span>)[[<span class="hljs-string">"id"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>    </tr>  </thead>  <tbody>    <tr>      <th>52</th>      <td>53</td>    </tr>  </tbody></table></div><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2><p>Give the <strong>id</strong> and the <strong>name</strong> for the <strong>stops</strong> on the ‘4’ ‘LRT’ service.</p><h3 id="mysql-2"><a href="#mysql-2" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%sql select id, name <span class="hljs-keyword">from</span> stops \</span><br><span class="line">where id <span class="hljs-keyword">in</span> (select stop <span class="hljs-keyword">from</span> route where num = <span class="hljs-string">'4'</span> <span class="hljs-keyword">and</span> company = <span class="hljs-string">'LRT'</span>) </span><br><span class="line"><span class="hljs-comment"># 一开始以为num为整型，写成 num = 4，虽然结果还是出来，mysql里设置了允许类型不匹配。</span></span><br><span class="line"><span class="hljs-comment"># 后来改成 num = '4',没有那些警告,警告如下图</span></span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs9 rows affected.</code></pre><table>    <tr>        <th>id</th>        <th>name</th>    </tr>    <tr>        <td>19</td>        <td>Bingham</td>    </tr>    <tr>        <td>53</td>        <td>Craiglockhart</td>    </tr>    <tr>        <td>85</td>        <td>Fairmilehead</td>    </tr>    <tr>        <td>115</td>        <td>Haymarket</td>    </tr>    <tr>        <td>117</td>        <td>Hillend</td>    </tr>    <tr>        <td>149</td>        <td>London Road</td>    </tr>    <tr>        <td>177</td>        <td>Northfield</td>    </tr>    <tr>        <td>179</td>        <td>Oxgangs</td>    </tr>    <tr>        <td>194</td>        <td>Princes Street</td>    </tr></table><p><img src="attachment:image.png" alt="image.png"></p><h3 id="pandas-2"><a href="#pandas-2" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stopids = route.query(<span class="hljs-string">"num == '4' and company == 'LRT'"</span>)[<span class="hljs-string">"stop"</span>].values  <span class="hljs-comment"># 一开始是写成 num == 4 结果stopids为空</span></span><br><span class="line">stopids</span><br></pre></td></tr></table></figure><pre><code>array([ 19,  53,  85, 115, 117, 149, 177, 179, 194])</code></pre><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stops[stops.id.isin(stopids)][[<span class="hljs-string">"id"</span>, <span class="hljs-string">"name"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>name</th>    </tr>  </thead>  <tbody>    <tr>      <th>18</th>      <td>19</td>      <td>Bingham</td>    </tr>    <tr>      <th>52</th>      <td>53</td>      <td>Craiglockhart</td>    </tr>    <tr>      <th>83</th>      <td>85</td>      <td>Fairmilehead</td>    </tr>    <tr>      <th>113</th>      <td>115</td>      <td>Haymarket</td>    </tr>    <tr>      <th>115</th>      <td>117</td>      <td>Hillend</td>    </tr>    <tr>      <th>145</th>      <td>149</td>      <td>London Road</td>    </tr>    <tr>      <th>173</th>      <td>177</td>      <td>Northfield</td>    </tr>    <tr>      <th>175</th>      <td>179</td>      <td>Oxgangs</td>    </tr>    <tr>      <th>190</th>      <td>194</td>      <td>Princes Street</td>    </tr>  </tbody></table></div><h2 id="Routes-and-stops"><a href="#Routes-and-stops" class="headerlink" title="Routes and stops"></a>Routes and stops</h2><h2 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h2><p>The query shown gives the number of routes that visit either London Road (149) or Craiglockhart (53). Run the query and notice the two services that link these <strong>stops</strong> have a count of 2. Add a HAVING clause to restrict the output to these two routes.</p><blockquote><p>示例</p></blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT company, num, COUNT(*)</span><br><span class="line">FROM route WHERE stop=149 OR stop=53</span><br><span class="line">GROUP BY company, num</span><br></pre></td></tr></table></figure><p><img src="attachment:image.png" alt="image.png"></p><h3 id="mysql-3"><a href="#mysql-3" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT company, num, COUNT(*) \</span><br><span class="line">FROM route WHERE stop=<span class="hljs-number">149</span> OR stop=<span class="hljs-number">53</span> \</span><br><span class="line">GROUP BY company, num HAVING COUNT(*)=<span class="hljs-number">2</span></span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs2 rows affected.</code></pre><table>    <tr>        <th>company</th>        <th>num</th>        <th>COUNT(*)</th>    </tr>    <tr>        <td>LRT</td>        <td>4</td>        <td>2</td>    </tr>    <tr>        <td>LRT</td>        <td>45</td>        <td>2</td>    </tr></table><h3 id="pandas-3"><a href="#pandas-3" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp = route[(route.stop == <span class="hljs-number">149</span>) | (route.stop == <span class="hljs-number">53</span>)].groupby([<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>]).count().reset_index()</span><br><span class="line">temp</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>company</th>      <th>num</th>      <th>pos</th>      <th>stop</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>LRT</td>      <td>10</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>LRT</td>      <td>15</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>2</th>      <td>LRT</td>      <td>20</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>LRT</td>      <td>26A</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>LRT</td>      <td>27</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>5</th>      <td>LRT</td>      <td>34</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>6</th>      <td>LRT</td>      <td>35</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>7</th>      <td>LRT</td>      <td>4</td>      <td>2</td>      <td>2</td>    </tr>    <tr>      <th>8</th>      <td>LRT</td>      <td>42</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>9</th>      <td>LRT</td>      <td>43</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>10</th>      <td>LRT</td>      <td>44</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>11</th>      <td>LRT</td>      <td>45</td>      <td>2</td>      <td>2</td>    </tr>    <tr>      <th>12</th>      <td>LRT</td>      <td>46A</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>13</th>      <td>LRT</td>      <td>47</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>14</th>      <td>LRT</td>      <td>5</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>15</th>      <td>LRT</td>      <td>51</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>16</th>      <td>LRT</td>      <td>63</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>17</th>      <td>LRT</td>      <td>65</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>18</th>      <td>LRT</td>      <td>75</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>19</th>      <td>LRT</td>      <td>87</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>20</th>      <td>LRT</td>      <td>87A</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>21</th>      <td>SMT</td>      <td>106</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>22</th>      <td>SMT</td>      <td>113</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>23</th>      <td>SMT</td>      <td>124</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>24</th>      <td>SMT</td>      <td>66</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>25</th>      <td>SMT</td>      <td>66A</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>26</th>      <td>SMT</td>      <td>C5</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>27</th>      <td>SMT</td>      <td>C55</td>      <td>1</td>      <td>1</td>    </tr>  </tbody></table></div><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">temp.query(<span class="hljs-string">"pos == 2"</span>)[[<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>company</th>      <th>num</th>    </tr>  </thead>  <tbody>    <tr>      <th>7</th>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>11</th>      <td>LRT</td>      <td>45</td>    </tr>  </tbody></table></div><h2 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h2><p>Execute the self join shown and observe that b.stop gives all the places you can get to from Craiglockhart, without changing routes. Change the query so that it shows the services from Craiglockhart to London Road.</p><blockquote><p>示例</p></blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.company, a.num, a.stop, b.stop</span><br><span class="line">FROM route a JOIN route b ON</span><br><span class="line">  (a.company=b.company AND a.num=b.num)</span><br><span class="line">WHERE a.stop=53</span><br></pre></td></tr></table></figure><p><img src="attachment:image.png" alt="image.png"><strong>…</strong></p><h3 id="mysql-4"><a href="#mysql-4" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT a.company, a.num, a.stop, b.stop \</span><br><span class="line">FROM route a JOIN route b ON \</span><br><span class="line">  (a.company=b.company AND a.num=b.num) \</span><br><span class="line">WHERE a.stop=<span class="hljs-number">53</span> <span class="hljs-keyword">and</span> b.stop = ( \</span><br><span class="line">select id <span class="hljs-keyword">from</span> stops where name = <span class="hljs-string">'London Road'</span>)</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs2 rows affected.</code></pre><table>    <tr>        <th>company</th>        <th>num</th>        <th>stop</th>        <th>stop_1</th>    </tr>    <tr>        <td>LRT</td>        <td>4</td>        <td>53</td>        <td>149</td>    </tr>    <tr>        <td>LRT</td>        <td>45</td>        <td>53</td>        <td>149</td>    </tr></table><h3 id="pandas-4"><a href="#pandas-4" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># merge()里的参数left_on不单是单个字段（字符串），也可以是多个字段（列表）</span></span><br><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>]).query(<span class="hljs-string">"stop_x == 53 and stop_y == 149"</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>num</th>      <th>company</th>      <th>pos_x</th>      <th>stop_x</th>      <th>pos_y</th>      <th>stop_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>3018</th>      <td>4</td>      <td>LRT</td>      <td>6</td>      <td>53</td>      <td>3</td>      <td>149</td>    </tr>    <tr>      <th>8680</th>      <td>45</td>      <td>LRT</td>      <td>7</td>      <td>53</td>      <td>4</td>      <td>149</td>    </tr>  </tbody></table></div><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 选取所需的列</span></span><br><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>]).query(<span class="hljs-string">"stop_x == 53 and stop_y == 149"</span>)\</span><br><span class="line">[[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>, <span class="hljs-string">"stop_x"</span>, <span class="hljs-string">"stop_y"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>num</th>      <th>company</th>      <th>stop_x</th>      <th>stop_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>3018</th>      <td>4</td>      <td>LRT</td>      <td>53</td>      <td>149</td>    </tr>    <tr>      <th>8680</th>      <td>45</td>      <td>LRT</td>      <td>53</td>      <td>149</td>    </tr>  </tbody></table></div><h2 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h2><p>The query shown is similar to the previous one, however by joining two copies of the <strong>stops</strong> table we can refer to <strong>stops</strong> by <strong>name</strong> rather than by number. Change the query so that the services between ‘Craiglockhart’ and ‘London Road’ are shown. If you are tired of these places try ‘Fairmilehead’ against ‘Tollcross’</p><blockquote><p>示例    </p></blockquote><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.company, a.num, stopa.name, stopb.name</span><br><span class="line">FROM route a JOIN route b ON</span><br><span class="line">  (a.company=b.company AND a.num=b.num)</span><br><span class="line">  JOIN stops stopa ON (a.stop=stopa.id)</span><br><span class="line">  JOIN stops stopb ON (b.stop=stopb.id)</span><br><span class="line">WHERE stopa.name=&apos;Craiglockhart&apos;</span><br></pre></td></tr></table></figure><p><img src="attachment:image.png" alt="image.png"><strong>…</strong></p><h3 id="mysql-5"><a href="#mysql-5" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT a.company, a.num, stopa.name, stopb.name \</span><br><span class="line">FROM route a JOIN route b ON \</span><br><span class="line">  (a.company=b.company AND a.num=b.num) \</span><br><span class="line">  JOIN stops stopa ON (a.stop=stopa.id) \</span><br><span class="line">  JOIN stops stopb ON (b.stop=stopb.id) \</span><br><span class="line">WHERE stopa.name=<span class="hljs-string">'Craiglockhart'</span> <span class="hljs-keyword">and</span> stopb.name = <span class="hljs-string">'London Road'</span></span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs2 rows affected.</code></pre><table>    <tr>        <th>company</th>        <th>num</th>        <th>name</th>        <th>name_1</th>    </tr>    <tr>        <td>LRT</td>        <td>4</td>        <td>Craiglockhart</td>        <td>London Road</td>    </tr>    <tr>        <td>LRT</td>        <td>45</td>        <td>Craiglockhart</td>        <td>London Road</td>    </tr></table><h3 id="pandas-5"><a href="#pandas-5" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_y"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .query(<span class="hljs-string">"name_x == 'Craiglockhart' and name_y == 'London Road'"</span>)\</span><br><span class="line">    [[<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>, <span class="hljs-string">"name_x"</span>, <span class="hljs-string">"name_y"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>company</th>      <th>num</th>      <th>name_x</th>      <th>name_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>361</th>      <td>LRT</td>      <td>4</td>      <td>Craiglockhart</td>      <td>London Road</td>    </tr>    <tr>      <th>362</th>      <td>LRT</td>      <td>45</td>      <td>Craiglockhart</td>      <td>London Road</td>    </tr>  </tbody></table></div><h2 id="Using-a-self-join"><a href="#Using-a-self-join" class="headerlink" title="Using a self join"></a><a href="https://sqlzoo.net/wiki/Using_a_self_join" target="_blank" rel="noopener" title="Using a self join">Using a self join</a></h2><h2 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h2><p><strong>Give a list of all the services which connect stops 115 and 137 (‘Haymarket’ and ‘Leith’)</strong></p><h3 id="mysql-6"><a href="#mysql-6" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%sql select DISTINCTROW a.company, a.num \     <span class="hljs-comment"># mysql里用了DISTINCTROW来删除重复行</span></span><br><span class="line"><span class="hljs-keyword">from</span> route a join route b on \</span><br><span class="line">(a.company = b.company <span class="hljs-keyword">and</span> a.num = b.num) \</span><br><span class="line">join stops stopa on (a.stop = stopa.id) \</span><br><span class="line">join stops stopb on (b.stop = stopb.id) \</span><br><span class="line">where stopa.name = <span class="hljs-string">'Haymarket'</span> <span class="hljs-keyword">and</span> stopb.name = <span class="hljs-string">'Leith'</span></span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs6 rows affected.</code></pre><table>    <tr>        <th>company</th>        <th>num</th>    </tr>    <tr>        <td>LRT</td>        <td>12</td>    </tr>    <tr>        <td>LRT</td>        <td>2</td>    </tr>    <tr>        <td>LRT</td>        <td>22</td>    </tr>    <tr>        <td>LRT</td>        <td>25</td>    </tr>    <tr>        <td>LRT</td>        <td>2A</td>    </tr>    <tr>        <td>SMT</td>        <td>C5</td>    </tr></table><h3 id="pandas-6"><a href="#pandas-6" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_y"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .query(<span class="hljs-string">"name_x == 'Haymarket' and name_y == 'Leith'"</span>)\</span><br><span class="line">    [[<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>]].drop_duplicates()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>company</th>      <th>num</th>    </tr>  </thead>  <tbody>    <tr>      <th>3574</th>      <td>LRT</td>      <td>12</td>    </tr>    <tr>      <th>3576</th>      <td>LRT</td>      <td>2</td>    </tr>    <tr>      <th>3578</th>      <td>LRT</td>      <td>2A</td>    </tr>    <tr>      <th>3580</th>      <td>SMT</td>      <td>C5</td>    </tr>    <tr>      <th>3581</th>      <td>LRT</td>      <td>22</td>    </tr>    <tr>      <th>3582</th>      <td>LRT</td>      <td>25</td>    </tr>  </tbody></table></div><h2 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h2><p>Give a list of the services which connect the <strong>stops</strong> ‘Craiglockhart’ and ‘Tollcross’</p><h3 id="mysql-7"><a href="#mysql-7" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT DISTINCTROW a.company, a.num \</span><br><span class="line">FROM route a JOIN route b \</span><br><span class="line">ON (a.company = b.company AND a.num = b.num) \</span><br><span class="line">JOIN stops stopa ON (a.stop = stopa.id) \</span><br><span class="line">JOIN stops stopb ON (b.stop = stopb.id) \</span><br><span class="line">WHERE stopa.name = <span class="hljs-string">'Craiglockhart'</span> AND stopb.name = <span class="hljs-string">'Tollcross'</span></span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs4 rows affected.</code></pre><table>    <tr>        <th>company</th>        <th>num</th>    </tr>    <tr>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>LRT</td>        <td>47</td>    </tr></table><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_y"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .query(<span class="hljs-string">"name_x == 'Craiglockhart' and name_y == 'Tollcross'"</span>)\</span><br><span class="line">    [[<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>]].drop_duplicates()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>company</th>      <th>num</th>    </tr>  </thead>  <tbody>    <tr>      <th>8325</th>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>8326</th>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>8327</th>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>8328</th>      <td>LRT</td>      <td>10</td>    </tr>  </tbody></table></div><h2 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h2><p>Give a distinct list of the <strong>stops</strong> which may be reached from ‘Craiglockhart’ by taking one bus, including ‘Craiglockhart’ itself, offered by the LRT company. Include the company and bus no. of the relevant services.</p><h3 id="mysql-8"><a href="#mysql-8" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%sql select DISTINCTROW stopb.name, a.company, a.num <span class="hljs-keyword">from</span> route a \</span><br><span class="line">join route b on (a.company = b.company <span class="hljs-keyword">and</span> a.num = b.num) \</span><br><span class="line">join stops stopa on (a.stop = stopa.id) \</span><br><span class="line">join stops stopb on (b.stop = stopb.id) \</span><br><span class="line">where a.company = <span class="hljs-string">'LRT'</span> <span class="hljs-keyword">and</span> stopa.name = <span class="hljs-string">'Craiglockhart'</span></span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs46 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>company</th>        <th>num</th>    </tr>    <tr>        <td>Balerno</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Balerno Church</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Bingham</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Brunstane</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Canonmills</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Canonmills</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Cockburn Crescent</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Colinton</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Colinton</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Colinton</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Craiglockhart</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Craiglockhart</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Craiglockhart</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Craiglockhart</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Craiglockhart</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Crewe Toll</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Currie</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Currie</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Duddingston</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Fairmilehead</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Hanover Street</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Hanover Street</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Hanover Street</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Haymarket</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Hillend</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Hunters Tryst</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Leith</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Leith Walk</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>London Road</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>London Road</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Muirhouse</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Newhaven</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Northfield</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Northfield</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Oxgangs</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Oxgangs</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Princes Street</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Princes Street</td>        <td>LRT</td>        <td>4</td>    </tr>    <tr>        <td>Riccarton Campus</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Silverknowes</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Silverknowes</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Tollcross</td>        <td>LRT</td>        <td>10</td>    </tr>    <tr>        <td>Tollcross</td>        <td>LRT</td>        <td>27</td>    </tr>    <tr>        <td>Tollcross</td>        <td>LRT</td>        <td>45</td>    </tr>    <tr>        <td>Tollcross</td>        <td>LRT</td>        <td>47</td>    </tr>    <tr>        <td>Torphin</td>        <td>LRT</td>        <td>10</td>    </tr></table><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_y"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .query(<span class="hljs-string">"company == 'LRT' and name_x == 'Craiglockhart'"</span>)\</span><br><span class="line">    [[<span class="hljs-string">"name_y"</span>, <span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>]].drop_duplicates().sort_values(<span class="hljs-string">"name_y"</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name_y</th>      <th>company</th>      <th>num</th>    </tr>  </thead>  <tbody>    <tr>      <th>7424</th>      <td>Balerno</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>7462</th>      <td>Balerno Church</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>7850</th>      <td>Bingham</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>6835</th>      <td>Brunstane</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>1812</th>      <td>Canonmills</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>1813</th>      <td>Canonmills</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>7515</th>      <td>Cockburn Crescent</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>8142</th>      <td>Colinton</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>8141</th>      <td>Colinton</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>8140</th>      <td>Colinton</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>7880</th>      <td>Craiglockhart</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>7879</th>      <td>Craiglockhart</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>7878</th>      <td>Craiglockhart</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>7877</th>      <td>Craiglockhart</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>7881</th>      <td>Craiglockhart</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>2074</th>      <td>Crewe Toll</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>7585</th>      <td>Currie</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>7586</th>      <td>Currie</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>8222</th>      <td>Duddingston</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>7936</th>      <td>Fairmilehead</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>1397</th>      <td>Hanover Street</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>1396</th>      <td>Hanover Street</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>1395</th>      <td>Hanover Street</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>6358</th>      <td>Haymarket</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>7995</th>      <td>Hillend</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>11223</th>      <td>Hunters Tryst</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>3641</th>      <td>Leith</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>9148</th>      <td>Leith Walk</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>361</th>      <td>London Road</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>362</th>      <td>London Road</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>10607</th>      <td>Muirhouse</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>5517</th>      <td>Newhaven</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>7331</th>      <td>Northfield</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>7332</th>      <td>Northfield</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>8030</th>      <td>Oxgangs</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>8031</th>      <td>Oxgangs</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>5131</th>      <td>Princes Street</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>5130</th>      <td>Princes Street</td>      <td>LRT</td>      <td>4</td>    </tr>    <tr>      <th>8257</th>      <td>Riccarton Campus</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>9641</th>      <td>Silverknowes</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>9640</th>      <td>Silverknowes</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>8326</th>      <td>Tollcross</td>      <td>LRT</td>      <td>45</td>    </tr>    <tr>      <th>8327</th>      <td>Tollcross</td>      <td>LRT</td>      <td>27</td>    </tr>    <tr>      <th>8325</th>      <td>Tollcross</td>      <td>LRT</td>      <td>47</td>    </tr>    <tr>      <th>8328</th>      <td>Tollcross</td>      <td>LRT</td>      <td>10</td>    </tr>    <tr>      <th>11671</th>      <td>Torphin</td>      <td>LRT</td>      <td>10</td>    </tr>  </tbody></table></div><h2 id="10"><a href="#10" class="headerlink" title="10."></a>10.</h2><p>Find the routes involving two buses that can go from <strong>Craiglockhart</strong> to <strong>Lochend</strong>.    Show the bus no. and company for the first bus, the name of the stop for the transfer,<br>and the bus no. and company for the second bus.</p><p>Hint</p><p>Self-join twice to find buses that visit Craiglockhart and Lochend, then join those on matching stops.</p><h3 id="mysql-9"><a href="#mysql-9" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT a.num, a.company, stops.name, c.num, c.company \</span><br><span class="line"><span class="hljs-keyword">from</span> route a join route b on a.company=b.company AND a.num=b.num \</span><br><span class="line">join stops on stops.id=a.stop \</span><br><span class="line">join route c on stops.id=c.stop \</span><br><span class="line">join route d on c.company=d.company AND c.num=d.num \</span><br><span class="line">where b.stop =(select id <span class="hljs-keyword">from</span> stops where name= <span class="hljs-string">'Craiglockhart'</span>) \</span><br><span class="line"><span class="hljs-keyword">and</span> d.stop =(select id <span class="hljs-keyword">from</span> stops where name= <span class="hljs-string">'Lochend'</span>)</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs36 rows affected.</code></pre><table>    <tr>        <th>num</th>        <th>company</th>        <th>name</th>        <th>num_1</th>        <th>company_1</th>    </tr>    <tr>        <td>27</td>        <td>LRT</td>        <td>Crewe Toll</td>        <td>20</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>20</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>20</td>        <td>LRT</td>    </tr>    <tr>        <td>27</td>        <td>LRT</td>        <td>Canonmills</td>        <td>34</td>        <td>LRT</td>    </tr>    <tr>        <td>47</td>        <td>LRT</td>        <td>Canonmills</td>        <td>34</td>        <td>LRT</td>    </tr>    <tr>        <td>10</td>        <td>LRT</td>        <td>Leith</td>        <td>34</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>34</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>34</td>        <td>LRT</td>    </tr>    <tr>        <td>27</td>        <td>LRT</td>        <td>Canonmills</td>        <td>35</td>        <td>LRT</td>    </tr>    <tr>        <td>47</td>        <td>LRT</td>        <td>Canonmills</td>        <td>35</td>        <td>LRT</td>    </tr>    <tr>        <td>10</td>        <td>LRT</td>        <td>Leith</td>        <td>35</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>35</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>35</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>Duddingston</td>        <td>42</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>42</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>42</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>Duddingston</td>        <td>46A</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>46A</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>46A</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>Haymarket</td>        <td>65</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>65</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>65</td>        <td>LRT</td>    </tr>    <tr>        <td>10</td>        <td>LRT</td>        <td>Princes Street</td>        <td>65</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>Princes Street</td>        <td>65</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>Riccarton Campus</td>        <td>65</td>        <td>LRT</td>    </tr>    <tr>        <td>10</td>        <td>LRT</td>        <td>Leith</td>        <td>87</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>87</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>87</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>87A</td>        <td>LRT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>87A</td>        <td>LRT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>Haymarket</td>        <td>C5</td>        <td>SMT</td>    </tr>    <tr>        <td>10</td>        <td>LRT</td>        <td>Leith</td>        <td>C5</td>        <td>SMT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>London Road</td>        <td>C5</td>        <td>SMT</td>    </tr>    <tr>        <td>45</td>        <td>LRT</td>        <td>London Road</td>        <td>C5</td>        <td>SMT</td>    </tr>    <tr>        <td>10</td>        <td>LRT</td>        <td>Princes Street</td>        <td>C5</td>        <td>SMT</td>    </tr>    <tr>        <td>4</td>        <td>LRT</td>        <td>Princes Street</td>        <td>C5</td>        <td>SMT</td>    </tr></table><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stops.query(<span class="hljs-string">"name == 'Craiglockhart'"</span>)[<span class="hljs-string">"id"</span>]</span><br></pre></td></tr></table></figure><pre><code>52    53Name: id, dtype: int64</code></pre><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stops.query(<span class="hljs-string">"name == 'Lochend'"</span>)[<span class="hljs-string">"id"</span>]</span><br></pre></td></tr></table></figure><pre><code>143    147Name: id, dtype: int64</code></pre><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(route, left_on=<span class="hljs-string">"id"</span>, right_on=<span class="hljs-string">"stop"</span>).head()</span><br><span class="line"><span class="hljs-comment"># 后面还有连接一个"route"，尝试过，会出现重复的列名，所以要先对数据更改列名</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>num_x</th>      <th>company_x</th>      <th>pos_x</th>      <th>stop_x</th>      <th>pos_y</th>      <th>stop_y</th>      <th>id</th>      <th>name</th>      <th>num_y</th>      <th>company_y</th>      <th>pos</th>      <th>stop</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>39</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>2</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>2</td>      <td>95</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>4</td>      <td>149</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>8</td>      <td>151</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>    </tr>  </tbody></table></div><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m = route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(route, left_on=<span class="hljs-string">"id"</span>, right_on=<span class="hljs-string">"stop"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.columns = [<span class="hljs-string">"num_ab"</span>, <span class="hljs-string">"company_ab"</span>, <span class="hljs-string">"pos_a"</span>, <span class="hljs-string">"stop_a"</span>, <span class="hljs-string">"pos_b"</span>, <span class="hljs-string">"stop_b"</span>, <span class="hljs-string">"id"</span>, <span class="hljs-string">"name"</span>, <span class="hljs-string">"num_c"</span>, <span class="hljs-string">"company_c"</span>, <span class="hljs-string">"pos_c"</span>, <span class="hljs-string">"stop_c"</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m.merge(route, left_on=[<span class="hljs-string">"company_c"</span>, <span class="hljs-string">"num_c"</span>], right_on=[<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>])\</span><br><span class="line">    .query(<span class="hljs-string">"stop_b == 53 and stop == 147"</span>)\</span><br><span class="line">    [[<span class="hljs-string">"num_ab"</span>, <span class="hljs-string">"company_ab"</span>, <span class="hljs-string">"name"</span>, <span class="hljs-string">"num_c"</span>, <span class="hljs-string">"company_c"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>num_ab</th>      <th>company_ab</th>      <th>name</th>      <th>num_c</th>      <th>company_c</th>    </tr>  </thead>  <tbody>    <tr>      <th>25175</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>34</td>      <td>LRT</td>    </tr>    <tr>      <th>26030</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>34</td>      <td>LRT</td>    </tr>    <tr>      <th>31595</th>      <td>47</td>      <td>LRT</td>      <td>Canonmills</td>      <td>34</td>      <td>LRT</td>    </tr>    <tr>      <th>32855</th>      <td>27</td>      <td>LRT</td>      <td>Canonmills</td>      <td>34</td>      <td>LRT</td>    </tr>    <tr>      <th>44015</th>      <td>10</td>      <td>LRT</td>      <td>Leith</td>      <td>34</td>      <td>LRT</td>    </tr>    <tr>      <th>54500</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>35</td>      <td>LRT</td>    </tr>    <tr>      <th>55355</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>35</td>      <td>LRT</td>    </tr>    <tr>      <th>60920</th>      <td>47</td>      <td>LRT</td>      <td>Canonmills</td>      <td>35</td>      <td>LRT</td>    </tr>    <tr>      <th>62180</th>      <td>27</td>      <td>LRT</td>      <td>Canonmills</td>      <td>35</td>      <td>LRT</td>    </tr>    <tr>      <th>73340</th>      <td>10</td>      <td>LRT</td>      <td>Leith</td>      <td>35</td>      <td>LRT</td>    </tr>    <tr>      <th>160879</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>20</td>      <td>LRT</td>    </tr>    <tr>      <th>161392</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>20</td>      <td>LRT</td>    </tr>    <tr>      <th>165235</th>      <td>27</td>      <td>LRT</td>      <td>Crewe Toll</td>      <td>20</td>      <td>LRT</td>    </tr>    <tr>      <th>252608</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>42</td>      <td>LRT</td>    </tr>    <tr>      <th>253178</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>42</td>      <td>LRT</td>    </tr>    <tr>      <th>268008</th>      <td>45</td>      <td>LRT</td>      <td>Duddingston</td>      <td>42</td>      <td>LRT</td>    </tr>    <tr>      <th>317860</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>46A</td>      <td>LRT</td>    </tr>    <tr>      <th>318430</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>46A</td>      <td>LRT</td>    </tr>    <tr>      <th>333260</th>      <td>45</td>      <td>LRT</td>      <td>Duddingston</td>      <td>46A</td>      <td>LRT</td>    </tr>    <tr>      <th>367956</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>65</td>      <td>LRT</td>    </tr>    <tr>      <th>368412</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>65</td>      <td>LRT</td>    </tr>    <tr>      <th>369820</th>      <td>4</td>      <td>LRT</td>      <td>Haymarket</td>      <td>65</td>      <td>LRT</td>    </tr>    <tr>      <th>373340</th>      <td>4</td>      <td>LRT</td>      <td>Princes Street</td>      <td>65</td>      <td>LRT</td>    </tr>    <tr>      <th>375420</th>      <td>10</td>      <td>LRT</td>      <td>Princes Street</td>      <td>65</td>      <td>LRT</td>    </tr>    <tr>      <th>377748</th>      <td>45</td>      <td>LRT</td>      <td>Riccarton Campus</td>      <td>65</td>      <td>LRT</td>    </tr>    <tr>      <th>437423</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>87</td>      <td>LRT</td>    </tr>    <tr>      <th>437993</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>87</td>      <td>LRT</td>    </tr>    <tr>      <th>448623</th>      <td>10</td>      <td>LRT</td>      <td>Leith</td>      <td>87</td>      <td>LRT</td>    </tr>    <tr>      <th>450915</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>87A</td>      <td>LRT</td>    </tr>    <tr>      <th>451314</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>87A</td>      <td>LRT</td>    </tr>    <tr>      <th>457918</th>      <td>4</td>      <td>LRT</td>      <td>London Road</td>      <td>C5</td>      <td>SMT</td>    </tr>    <tr>      <th>458545</th>      <td>45</td>      <td>LRT</td>      <td>London Road</td>      <td>C5</td>      <td>SMT</td>    </tr>    <tr>      <th>460481</th>      <td>4</td>      <td>LRT</td>      <td>Haymarket</td>      <td>C5</td>      <td>SMT</td>    </tr>    <tr>      <th>465321</th>      <td>4</td>      <td>LRT</td>      <td>Princes Street</td>      <td>C5</td>      <td>SMT</td>    </tr>    <tr>      <th>468181</th>      <td>10</td>      <td>LRT</td>      <td>Princes Street</td>      <td>C5</td>      <td>SMT</td>    </tr>    <tr>      <th>476508</th>      <td>10</td>      <td>LRT</td>      <td>Leith</td>      <td>C5</td>      <td>SMT</td>    </tr>  </tbody></table></div><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_.count()  <span class="hljs-comment"># 这里有个小技巧："_"表示前一个结果的输出</span></span><br></pre></td></tr></table></figure><pre><code>num_ab        36company_ab    36name          36num_c         36company_c     36dtype: int64</code></pre><p><strong>尽管结果得出跟mysql一样，但过程复杂了不少，pandas对处理多个自连接有些不太方便–得处理命名问题</strong></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 这里展示了4个route关联，列名出现重复的现象</span></span><br><span class="line">route.merge(route, left_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>], right_on=[<span class="hljs-string">"num"</span>, <span class="hljs-string">"company"</span>])\</span><br><span class="line">    .merge(stops, left_on=<span class="hljs-string">"stop_x"</span>, right_on=<span class="hljs-string">"id"</span>)\</span><br><span class="line">    .merge(route, left_on=<span class="hljs-string">"id"</span>, right_on=<span class="hljs-string">"stop"</span>)\</span><br><span class="line">    .merge(route, left_on=[<span class="hljs-string">"company_y"</span>, <span class="hljs-string">"num_y"</span>], right_on=[<span class="hljs-string">"company"</span>, <span class="hljs-string">"num"</span>]).head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>num_x</th>      <th>company_x</th>      <th>pos_x</th>      <th>stop_x</th>      <th>pos_y</th>      <th>stop_y</th>      <th>id</th>      <th>name</th>      <th>num_y</th>      <th>company_y</th>      <th>pos_x</th>      <th>stop_x</th>      <th>num</th>      <th>company</th>      <th>pos_y</th>      <th>stop_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>124</td>      <td>SMT</td>      <td>1</td>      <td>39</td>    </tr>    <tr>      <th>2</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>124</td>      <td>SMT</td>      <td>2</td>      <td>95</td>    </tr>    <tr>      <th>3</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>124</td>      <td>SMT</td>      <td>4</td>      <td>149</td>    </tr>    <tr>      <th>4</th>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>9</td>      <td>1</td>      <td>1</td>      <td>Aberlady</td>      <td>124</td>      <td>SMT</td>      <td>9</td>      <td>1</td>      <td>124</td>      <td>SMT</td>      <td>8</td>      <td>151</td>    </tr>  </tbody></table></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Self-join&quot;&gt;&lt;a href=&quot;#Self-join&quot; class=&quot;headerlink&quot; title=&quot;Self join&quot;&gt;&lt;/a&gt;Self join&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://sqlzoo.net/wiki/Self_join&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Self join&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Edinburgh-Buses&quot;&gt;&lt;a href=&quot;#Edinburgh-Buses&quot; class=&quot;headerlink&quot; title=&quot;Edinburgh Buses&quot;&gt;&lt;/a&gt;Edinburgh Buses&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://sqlzoo.net/wiki/Edinburgh_Buses.&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; title=&quot;Edinburgh Buses.&quot;&gt;Details of the database&lt;/a&gt; Looking at the data&lt;/p&gt;
&lt;p&gt;stops(&lt;strong&gt;id&lt;/strong&gt;, name)
route(&lt;strong&gt;num&lt;/strong&gt;, &lt;strong&gt;company&lt;/strong&gt;, &lt;strong&gt;pos&lt;/strong&gt;, &lt;em&gt;stop&lt;/em&gt;)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;stops&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;em&gt;id&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;route&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;em&gt;num&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;company&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;pos&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="mysql" scheme="https://glanhoo.coding.me/tags/mysql/"/>
    
      <category term="pandas" scheme="https://glanhoo.coding.me/tags/pandas/"/>
    
      <category term="SQL" scheme="https://glanhoo.coding.me/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>mysql与pandas对照学习(8)</title>
    <link href="https://glanhoo.coding.me/2019/09/27/mysql%E4%B8%8Epandas%E5%AF%B9%E7%85%A7%E5%AD%A6%E4%B9%A0-8/"/>
    <id>https://glanhoo.coding.me/2019/09/27/mysql%E4%B8%8Epandas%E5%AF%B9%E7%85%A7%E5%AD%A6%E4%B9%A0-8/</id>
    <published>2019-09-27T11:32:09.000Z</published>
    <updated>2019-11-24T00:54:06.237Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Using-Null"><a href="#Using-Null" class="headerlink" title="Using Null"></a>Using Null</h2><p><a href="https://sqlzoo.net/wiki/Using_Null" target="_blank" rel="noopener">Using Null</a></p><table><thead><tr><th align="left">id</th><th align="left">dept</th><th align="left">name</th><th align="left">phone</th><th align="left">mobile</th></tr></thead><tbody><tr><td align="left">101</td><td align="left">1</td><td align="left">Shrivell</td><td align="left">2753</td><td align="left">07986 555 1234</td></tr><tr><td align="left">102</td><td align="left">1</td><td align="left">Throd</td><td align="left">2754</td><td align="left">07122 555 1920</td></tr><tr><td align="left">103</td><td align="left">1</td><td align="left">Splint</td><td align="left">2293</td><td align="left"></td></tr><tr><td align="left">104</td><td align="left"></td><td align="left">Spiregrain</td><td align="left">3287</td><td align="left"></td></tr><tr><td align="left">105</td><td align="left">2</td><td align="left">Cutflower</td><td align="left">3212</td><td align="left">07996 555 6574</td></tr><tr><td align="left">106</td><td align="left"></td><td align="left">Deadyawn</td><td align="left">3345</td><td align="left"></td></tr><tr><td align="left">…</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><table><thead><tr><th align="left">id</th><th align="left">name</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Computing</td></tr><tr><td align="left">2</td><td align="left">Design</td></tr><tr><td align="left">3</td><td align="left">Engineering</td></tr><tr><td align="left">…</td><td align="left"></td></tr></tbody></table><a id="more"></a><h2 id="Teachers-and-Departments"><a href="#Teachers-and-Departments" class="headerlink" title="Teachers and Departments"></a>Teachers and Departments</h2><h3 id="The-school-includes-many-departments-Most-teachers-work-exclusively-for-a-single-department-Some-teachers-have-no-department"><a href="#The-school-includes-many-departments-Most-teachers-work-exclusively-for-a-single-department-Some-teachers-have-no-department" class="headerlink" title="The school includes many departments. Most teachers work exclusively for a single department. Some teachers have no department."></a>The school includes many departments. Most teachers work exclusively for a single department. Some teachers have no department.</h3><p><a href="https://sqlzoo.net/wiki/Selecting_NULL_values." target="_blank" rel="noopener">Selecting NULL values.</a></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%load_ext sql</span><br><span class="line">%sql mysql+pymysql://root:lanhoo@localhost/dbs</span><br><span class="line"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd</span><br><span class="line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</span><br><span class="line"><span class="hljs-keyword">import</span> sqlalchemy</span><br><span class="line">engine = sqlalchemy.create_engine(<span class="hljs-string">"mysql+pymysql://root:lanhoo@localhost/dbs"</span>)</span><br><span class="line">teacher = pd.read_sql_table(<span class="hljs-string">"teacher"</span>, engine)</span><br><span class="line">dept = pd.read_sql_table(<span class="hljs-string">"dept"</span>, engine)</span><br></pre></td></tr></table></figure><h2 id="1-List-the-teachers-who-have-NULL-for-their-department"><a href="#1-List-the-teachers-who-have-NULL-for-their-department" class="headerlink" title="1.List the teachers who have NULL for their department."></a>1.List the teachers who have NULL for their department.</h2><p>Why we cannot use =</p><blockquote><p>You might think that the phrase dept=NULL would work here but it doesn’t - you can use the phrase <code>dept IS NULL</code>That’s not a proper explanation.No it’s not, but you can read a better explanation at Wikipedia:<a href="http://en.wikipedia.org/wiki/Null_%28SQL%29" target="_blank" rel="noopener">NULL.</a></p></blockquote><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sql select name <span class="hljs-keyword">from</span> teacher where dept IS NULL</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs2 rows affected.</code></pre><table>    <tr>        <th>name</th>    </tr>    <tr>        <td>Spiregrain</td>    </tr>    <tr>        <td>Deadyawn</td>    </tr></table><h3 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher[teacher.dept.isnull()][[<span class="hljs-string">"name"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>Spiregrain</td>    </tr>    <tr>      <th>5</th>      <td>Deadyawn</td>    </tr>  </tbody></table></div><h2 id="2-Note-the-INNER-JOIN-misses-the-teachers-with-no-department-and-the-departments-with-no-teacher"><a href="#2-Note-the-INNER-JOIN-misses-the-teachers-with-no-department-and-the-departments-with-no-teacher" class="headerlink" title="2. Note the INNER JOIN misses the teachers with no department and the departments with no teacher."></a>2. Note the INNER JOIN misses the teachers with no department and the departments with no teacher.</h2><h3 id="mysql-1"><a href="#mysql-1" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT teacher.name t_name, dept.name d_name\</span><br><span class="line">    FROM teacher INNER JOIN dept ON (teacher.dept=dept.id)</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs4 rows affected.</code></pre><table>    <tr>        <th>t_name</th>        <th>d_name</th>    </tr>    <tr>        <td>Shrivell</td>        <td>Computing</td>    </tr>    <tr>        <td>Throd</td>        <td>Computing</td>    </tr>    <tr>        <td>Splint</td>        <td>Computing</td>    </tr>    <tr>        <td>Cutflower</td>        <td>Design</td>    </tr></table><h3 id="pandas-1"><a href="#pandas-1" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher.merge(dept, left_on=<span class="hljs-string">"dept"</span>, right_on=<span class="hljs-string">"id"</span>)[[<span class="hljs-string">"name_x"</span>, <span class="hljs-string">"name_y"</span>]] <span class="hljs-comment"># pandas会自动给重名的加上后缀_x, _y</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name_x</th>      <th>name_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Computing</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Computing</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Computing</td>    </tr>    <tr>      <th>3</th>      <td>Cutflower</td>      <td>Design</td>    </tr>  </tbody></table></div><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">temp = teacher.merge(dept, left_on=<span class="hljs-string">"dept"</span>, right_on=<span class="hljs-string">"id"</span>)[[<span class="hljs-string">"name_x"</span>, <span class="hljs-string">"name_y"</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">temp.columns = [<span class="hljs-string">"t_name"</span>, <span class="hljs-string">"d_name"</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">temp</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>t_name</th>      <th>d_name</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Computing</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Computing</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Computing</td>    </tr>    <tr>      <th>3</th>      <td>Cutflower</td>      <td>Design</td>    </tr>  </tbody></table></div><h2 id="3-Use-a-different-JOIN-so-that-all-teachers-are-listed"><a href="#3-Use-a-different-JOIN-so-that-all-teachers-are-listed" class="headerlink" title="3. Use a different JOIN so that all teachers are listed."></a>3. Use a different JOIN so that all teachers are listed.</h2><h3 id="mysql-2"><a href="#mysql-2" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%sql select teacher.name, dept.name <span class="hljs-keyword">from</span> teacher left join dept \</span><br><span class="line">  on (teacher.dept = dept.id)</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs6 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>name_1</th>    </tr>    <tr>        <td>Shrivell</td>        <td>Computing</td>    </tr>    <tr>        <td>Throd</td>        <td>Computing</td>    </tr>    <tr>        <td>Splint</td>        <td>Computing</td>    </tr>    <tr>        <td>Cutflower</td>        <td>Design</td>    </tr>    <tr>        <td>Spiregrain</td>        <td>None</td>    </tr>    <tr>        <td>Deadyawn</td>        <td>None</td>    </tr></table><h3 id="pandas-2"><a href="#pandas-2" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher.merge(dept, left_on=<span class="hljs-string">"dept"</span>, right_on=<span class="hljs-string">"id"</span>, how=<span class="hljs-string">"left"</span>)[[<span class="hljs-string">"name_x"</span>, <span class="hljs-string">"name_y"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name_x</th>      <th>name_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Computing</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Computing</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Computing</td>    </tr>    <tr>      <th>3</th>      <td>Spiregrain</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>Cutflower</td>      <td>Design</td>    </tr>    <tr>      <th>5</th>      <td>Deadyawn</td>      <td>NaN</td>    </tr>  </tbody></table></div><h2 id="4-Use-a-different-JOIN-so-that-all-departments-are-listed"><a href="#4-Use-a-different-JOIN-so-that-all-departments-are-listed" class="headerlink" title="4. Use a different JOIN so that all departments are listed."></a>4. Use a different JOIN so that all departments are listed.</h2><h3 id="mysql-3"><a href="#mysql-3" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%sql select teacher.name, dept.name <span class="hljs-keyword">from</span> teacher right join dept \</span><br><span class="line">  on (teacher.dept = dept.id)</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs5 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>name_1</th>    </tr>    <tr>        <td>Shrivell</td>        <td>Computing</td>    </tr>    <tr>        <td>Throd</td>        <td>Computing</td>    </tr>    <tr>        <td>Splint</td>        <td>Computing</td>    </tr>    <tr>        <td>Cutflower</td>        <td>Design</td>    </tr>    <tr>        <td>None</td>        <td>Engineering</td>    </tr></table><h3 id="pandas-3"><a href="#pandas-3" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher.merge(dept, left_on=<span class="hljs-string">"dept"</span>, right_on=<span class="hljs-string">"id"</span>, how=<span class="hljs-string">"right"</span>)[[<span class="hljs-string">"name_x"</span>, <span class="hljs-string">"name_y"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name_x</th>      <th>name_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Computing</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Computing</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Computing</td>    </tr>    <tr>      <th>3</th>      <td>Cutflower</td>      <td>Design</td>    </tr>    <tr>      <th>4</th>      <td>NaN</td>      <td>Engineering</td>    </tr>  </tbody></table></div><hr><ul><li>Using the <a href="https://sqlzoo.net/wiki/COALESCE" target="_blank" rel="noopener" title="COALESCE">COALESCE</a> function</li></ul><h2 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h2><p>Use COALESCE to print the mobile number. Use the number ‘07986 444 2266’ if there is no number given. <strong>Show teacher name and mobile number or ‘07986 444 2266’</strong></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sql select name, COALESCE(mobile, <span class="hljs-string">'07986 444 2266'</span>) <span class="hljs-keyword">from</span> teacher</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs6 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>COALESCE(mobile, &#x27;07986 444 2266&#x27;)</th>    </tr>    <tr>        <td>Shrivell</td>        <td>07986 555 1234</td>    </tr>    <tr>        <td>Throd</td>        <td>07122 555 1920</td>    </tr>    <tr>        <td>Splint</td>        <td>07986 444 2266</td>    </tr>    <tr>        <td>Spiregrain</td>        <td>07986 444 2266</td>    </tr>    <tr>        <td>Cutflower</td>        <td>07996 555 6574</td>    </tr>    <tr>        <td>Deadyawn</td>        <td>07986 444 2266</td>    </tr></table><h3 id="pandas-4"><a href="#pandas-4" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher[[<span class="hljs-string">"name"</span>, <span class="hljs-string">"mobile"</span>]].fillna(<span class="hljs-string">"07986 444 2266"</span>) <span class="hljs-comment"># 使用DataFrame.fillna()方法可以填充空值</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>mobile</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>07986 555 1234</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>07122 555 1920</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>07986 444 2266</td>    </tr>    <tr>      <th>3</th>      <td>Spiregrain</td>      <td>07986 444 2266</td>    </tr>    <tr>      <th>4</th>      <td>Cutflower</td>      <td>07996 555 6574</td>    </tr>    <tr>      <th>5</th>      <td>Deadyawn</td>      <td>07986 444 2266</td>    </tr>  </tbody></table></div><h2 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h2><p><strong>Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string ‘None’ where there is no department.</strong></p><h3 id="mysql-4"><a href="#mysql-4" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%sql SELECT teacher.name, COALESCE(dept.name, <span class="hljs-string">'None'</span>) \</span><br><span class="line">FROM teacher LEFT JOIN dept ON (teacher.dept = dept.id)</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs6 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>COALESCE(dept.name, &#x27;None&#x27;)</th>    </tr>    <tr>        <td>Shrivell</td>        <td>Computing</td>    </tr>    <tr>        <td>Throd</td>        <td>Computing</td>    </tr>    <tr>        <td>Splint</td>        <td>Computing</td>    </tr>    <tr>        <td>Cutflower</td>        <td>Design</td>    </tr>    <tr>        <td>Spiregrain</td>        <td>None</td>    </tr>    <tr>        <td>Deadyawn</td>        <td>None</td>    </tr></table><h3 id="pandas-5"><a href="#pandas-5" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher.merge(dept, left_on=<span class="hljs-string">"dept"</span>, right_on=<span class="hljs-string">"id"</span>, how=<span class="hljs-string">"left"</span>)[[<span class="hljs-string">"name_x"</span>, <span class="hljs-string">"name_y"</span>]].fillna(<span class="hljs-string">"None"</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name_x</th>      <th>name_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Computing</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Computing</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Computing</td>    </tr>    <tr>      <th>3</th>      <td>Spiregrain</td>      <td>None</td>    </tr>    <tr>      <th>4</th>      <td>Cutflower</td>      <td>Design</td>    </tr>    <tr>      <th>5</th>      <td>Deadyawn</td>      <td>None</td>    </tr>  </tbody></table></div><h2 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h2><p><strong>Use COUNT to show the number of teachers and the number of mobile phones.</strong></p><h3 id="mysql-5"><a href="#mysql-5" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sql select count(name), count(mobile) <span class="hljs-keyword">from</span> teacher</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs1 rows affected.</code></pre><table>    <tr>        <th>count(name)</th>        <th>count(mobile)</th>    </tr>    <tr>        <td>6</td>        <td>3</td>    </tr></table><h3 id="pandas-6"><a href="#pandas-6" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher[[<span class="hljs-string">"name"</span>, <span class="hljs-string">"mobile"</span>]].count()</span><br></pre></td></tr></table></figure><pre><code>name      6mobile    3dtype: int64</code></pre><h3 id="mysql的COUNT-跟pandas的count-都是对非空值进行计数"><a href="#mysql的COUNT-跟pandas的count-都是对非空值进行计数" class="headerlink" title="mysql的COUNT()跟pandas的count()都是对非空值进行计数"></a>mysql的<code>COUNT()</code>跟pandas的<code>count()</code>都是对非空值进行计数</h3><h2 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h2><p><strong>Use COUNT and GROUP BY dept.name to show each department and the number of staff. Use a RIGHT JOIN to ensure that the Engineering department is listed.</strong></p><h3 id="mysql-6"><a href="#mysql-6" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%sql select dept.name,  count(teacher.id) <span class="hljs-keyword">from</span> teacher right join dept \</span><br><span class="line">on teacher.dept = dept.id group by dept.name</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs3 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>count(teacher.id)</th>    </tr>    <tr>        <td>Computing</td>        <td>3</td>    </tr>    <tr>        <td>Design</td>        <td>1</td>    </tr>    <tr>        <td>Engineering</td>        <td>0</td>    </tr></table><h3 id="pandas-7"><a href="#pandas-7" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 后缀"_x"是代表teacher表，"_y"是代表dept表</span></span><br><span class="line">teacher.merge(dept, left_on=<span class="hljs-string">"dept"</span>, right_on=<span class="hljs-string">"id"</span>, how=<span class="hljs-string">"right"</span>).groupby(<span class="hljs-string">"name_y"</span>)[[<span class="hljs-string">"id_x"</span>]].count()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id_x</th>    </tr>    <tr>      <th>name_y</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Computing</th>      <td>3</td>    </tr>    <tr>      <th>Design</th>      <td>1</td>    </tr>    <tr>      <th>Engineering</th>      <td>0</td>    </tr>  </tbody></table></div><hr><p>Using <a href="https://sqlzoo.net/wiki/CASE" target="_blank" rel="noopener" title="CASE">CASE</a></p><h2 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h2><p>Use CASE to show the <strong>name</strong> of each teacher followed by ‘Sci’ if the teacher is in <strong>dept</strong> 1 or 2 and ‘Art’ otherwise.</p><h3 id="mysql-7"><a href="#mysql-7" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%sql select teacher.name, \</span><br><span class="line">                case when (teacher.dept = <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> teacher.dept = <span class="hljs-number">2</span>) then <span class="hljs-string">'Sci'</span> \</span><br><span class="line">                    <span class="hljs-keyword">else</span> <span class="hljs-string">'Art'</span> end \</span><br><span class="line">            <span class="hljs-keyword">from</span> teacher</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs6 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>case when (teacher.dept = 1 or teacher.dept = 2) then &#x27;Sci&#x27;                      else &#x27;Art&#x27; end</th>    </tr>    <tr>        <td>Shrivell</td>        <td>Sci</td>    </tr>    <tr>        <td>Throd</td>        <td>Sci</td>    </tr>    <tr>        <td>Splint</td>        <td>Sci</td>    </tr>    <tr>        <td>Spiregrain</td>        <td>Art</td>    </tr>    <tr>        <td>Cutflower</td>        <td>Sci</td>    </tr>    <tr>        <td>Deadyawn</td>        <td>Art</td>    </tr></table><h3 id="pandas-8"><a href="#pandas-8" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher9 = teacher.copy() <span class="hljs-comment"># 下面要对数据进行新增一列，为了不修改原数据，这里就复制了一份</span></span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher9[<span class="hljs-string">"new_dept"</span>] = np.where((teacher.dept == <span class="hljs-number">1</span>) | (teacher.dept == <span class="hljs-number">2</span>), <span class="hljs-string">"Sci"</span>, <span class="hljs-string">"Art"</span>) <span class="hljs-comment"># 这里只能用"|",而不能用"or"</span></span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher9[[<span class="hljs-string">"name"</span>, <span class="hljs-string">"new_dept"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>new_dept</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Sci</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Sci</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Sci</td>    </tr>    <tr>      <th>3</th>      <td>Spiregrain</td>      <td>Art</td>    </tr>    <tr>      <th>4</th>      <td>Cutflower</td>      <td>Sci</td>    </tr>    <tr>      <th>5</th>      <td>Deadyawn</td>      <td>Art</td>    </tr>  </tbody></table></div><h2 id="10"><a href="#10" class="headerlink" title="10."></a>10.</h2><p><strong>Use CASE to show the name of each teacher followed by ‘Sci’ if the teacher is in dept 1 or 2, show ‘Art’ if the teacher’s dept is 3 and ‘None’ otherwise.</strong></p><h3 id="mysql-8"><a href="#mysql-8" class="headerlink" title="mysql"></a>mysql</h3><figure class="highlight sql hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%sql <span class="hljs-keyword">select</span> teacher.name, \</span><br><span class="line">        <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> (teacher.dept = <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> teacher.dept = <span class="hljs-number">2</span>) <span class="hljs-keyword">then</span> <span class="hljs-string">'Sci'</span> \</span><br><span class="line">             <span class="hljs-keyword">when</span> teacher.dept = <span class="hljs-number">3</span> <span class="hljs-keyword">then</span> <span class="hljs-string">'Art'</span> \</span><br><span class="line">             <span class="hljs-keyword">else</span> <span class="hljs-string">'None'</span> \</span><br><span class="line">         <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> new_dept \</span><br><span class="line">    <span class="hljs-keyword">from</span> teacher</span><br></pre></td></tr></table></figure><pre><code> * mysql+pymysql://root:***@localhost/dbs6 rows affected.</code></pre><table>    <tr>        <th>name</th>        <th>new_dept</th>    </tr>    <tr>        <td>Shrivell</td>        <td>Sci</td>    </tr>    <tr>        <td>Throd</td>        <td>Sci</td>    </tr>    <tr>        <td>Splint</td>        <td>Sci</td>    </tr>    <tr>        <td>Spiregrain</td>        <td>None</td>    </tr>    <tr>        <td>Cutflower</td>        <td>Sci</td>    </tr>    <tr>        <td>Deadyawn</td>        <td>None</td>    </tr></table><h3 id="pandas-9"><a href="#pandas-9" class="headerlink" title="pandas"></a>pandas</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 不能np.where()，因为它有三种情况,但可以使用apply()</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">(x)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> x == <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> x==<span class="hljs-number">2</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"Sci"</span></span><br><span class="line">    <span class="hljs-keyword">elif</span> x == <span class="hljs-number">3</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"Art"</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"None"</span></span><br><span class="line">teacher10 = teacher.copy()</span><br><span class="line">teacher10[<span class="hljs-string">"new_dept"</span>] = teacher.dept.apply(func)</span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher10[[<span class="hljs-string">"name"</span>, <span class="hljs-string">"new_dept"</span>]]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>new_dept</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Shrivell</td>      <td>Sci</td>    </tr>    <tr>      <th>1</th>      <td>Throd</td>      <td>Sci</td>    </tr>    <tr>      <th>2</th>      <td>Splint</td>      <td>Sci</td>    </tr>    <tr>      <th>3</th>      <td>Spiregrain</td>      <td>None</td>    </tr>    <tr>      <th>4</th>      <td>Cutflower</td>      <td>Sci</td>    </tr>    <tr>      <th>5</th>      <td>Deadyawn</td>      <td>None</td>    </tr>  </tbody></table></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Using-Null&quot;&gt;&lt;a href=&quot;#Using-Null&quot; class=&quot;headerlink&quot; title=&quot;Using Null&quot;&gt;&lt;/a&gt;Using Null&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://sqlzoo.net/wiki/Using_Null&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Using Null&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;id&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;dept&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;name&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;phone&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;mobile&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;101&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Shrivell&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2753&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;07986 555 1234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;102&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Throd&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2754&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;07122 555 1920&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;103&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Splint&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2293&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;104&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Spiregrain&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;3287&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;105&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Cutflower&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;3212&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;07996 555 6574&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;106&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Deadyawn&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;3345&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;…&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;id&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;1&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Computing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Design&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;3&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Engineering&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;…&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="数据分析" scheme="https://glanhoo.coding.me/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="mysql" scheme="https://glanhoo.coding.me/tags/mysql/"/>
    
      <category term="pandas" scheme="https://glanhoo.coding.me/tags/pandas/"/>
    
      <category term="SQL" scheme="https://glanhoo.coding.me/tags/SQL/"/>
    
  </entry>
  
</feed>
